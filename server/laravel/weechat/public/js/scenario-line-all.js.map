{"version":3,"sources":["scenario_line.js","validation.js"],"names":[],"mappingszgfile":"scenario-line-all.js","sourcesContent":["//globe variable\r\nvar common_data         = [];\r\nvar type_text           = 'text';\r\nvar type_button         = 'button';\r\nvar type_carousel       = 'carousel';\r\nvar type_file           = 'file';\r\nvar type_library        = 'library';\r\nvar type_confirm        = 'confirm';\r\nvar type_location       = 'location';\r\nvar type_sticker        = 'sticker';\r\nvar type_imagemap       = 'imagemap';\r\nvar type_api            = 'api';\r\nvar type_scenario_connect = 'scenario_connect';\r\nvar type_mail           = 'mail';\r\nvar type_api_variable_setting = 'api_variable_setting';\r\nvar max_button_block    = 4;\r\nvar max_carousel_item   = 5;\r\nvar max_carousel_button = 3;\r\nvar max_confirm_button  = 2;\r\nvar imagemap_base_size_w = 1040;\r\nvar imagemap_base_size_h = 1040;\r\nvar imagemap_btn_label = ['A', 'B', 'C', 'D', 'E', 'F'];\r\nvar imagemap_template_path = '/images/line_imagemap_template/';\r\nvar icheck_change_event = true;\r\nvar conversation_page = false;\r\n\r\n$(function () {\r\n    message_area_select(null);\r\n    if($('.scenario-edit.content_message').length) {\r\n        conversation_page = true;\r\n        $('#bot_content_type option').first().remove();\r\n    }\r\n    ///////////////////////START ACTION USER MESAGE\r\n    //get type of bot input textarea\r\n    $('.scenario-body').on('click', '.user_scenario', function (event) {\r\n        //hide message bot area\r\n        message_area_select(false);\r\n        var messages_focus      = $('input.messages_focus'),\r\n            user_message_name   = $(this).find('.messages_user_content').attr('name');\r\n        if (messages_focus.val() != user_message_name) {\r\n            var messages_user_type = $(this).find('input.messages_user_type').val();\r\n            //set active for bot scenario\r\n            $('.scenario-body .bot_scenario, .scenario-body .user_scenario').removeClass('active');\r\n            $(this).addClass('active');\r\n            //get type from bot message and set to sliderbar data\r\n            $('#user_content_type').val(messages_user_type);\r\n            //set name user message to right slidebar\r\n            messages_focus.val(user_message_name);\r\n            //set flag icheck_change_event do not icheck change event handle below action\r\n            icheck_change_event = false;\r\n            checkContentUserMessage(messages_user_type);\r\n            setUserDataToForm();\r\n            icheck_change_event = true;\r\n        }\r\n    });\r\n\r\n    //Change select content type\r\n    $('#user_content_type').on('change', function (event) {\r\n        var user_current        = userMessageElement(),\r\n            user_current_type   = user_current.next('input.messages_user_type'),\r\n            user_input_text     = userInputText();\r\n        //change type for bot message\r\n        user_current_type.val($(this).val());\r\n        //check text type and clear content user message\r\n        user_current.val('');\r\n\r\n        user_input_text.importTags('');\r\n        setUserDataMediaDemo(true);\r\n        //set flag icheck_change_event do not icheck change event handle below action\r\n        icheck_change_event = false;\r\n        checkContentUserInput($(this).val());\r\n        icheck_change_event = true;\r\n        createTag();\r\n    });\r\n\r\n    //TEXT TYPE\r\n    //init tags input and  change value for user message\r\n    $('.message_user_area .text_group input.user_text_type').tagsInput({\r\n        'onChange' : function () {\r\n            getDataUserText();\r\n        }\r\n    });\r\n\r\n    //delete tag and re-set value to user message\r\n    $(document).on('click', '.user_scenario .tagit-close', function (event) {\r\n        var ulParent        = $(this).parent().parent(),\r\n            user_current    = userMessageElement(),\r\n            user_type       = userMessageType(),\r\n            type            = common_data['user_content_type'];\r\n        $(this).parent().remove();\r\n        /*update user input*/\r\n        //case library: remove tag and un-select that library\r\n        if(user_type == type[type_library]) {\r\n            var lib_label_del   = $(this).parent().find(\".taget-label\").html();\r\n            //LIBRARY[library_name]\r\n            lib_label_del = lib_label_del.substring(8, lib_label_del.length - 1);\r\n            //unselect and re-init tag\r\n            icheckAuto('uncheck', $(\".message_user_area .library_group input.library_list[data-name='\" + lib_label_del + \"']\"));\r\n            getDataUserFromInput(type_library);\r\n\r\n        } else {\r\n            var arr_text  = new Array(),\r\n                arr_label = $(ulParent).find(\".taget-label\");\r\n            $(arr_label).each(function (index, value) {\r\n                arr_text.push($(value).text());\r\n            });\r\n            user_current.val(arr_text.join(','));\r\n            //re-fill to input sliderbar\r\n            setUserDataToForm();\r\n        }\r\n    });\r\n\r\n    //checkbox for use nlp\r\n    $(document).on('ifChanged', '.message_user_area input.use_nlp', function (event) {\r\n        var user_message_type    = userMessageType(),\r\n            type                 = common_data['user_content_type'];\r\n\r\n        if(user_message_type == type[type_text]) {\r\n            var group_message   = $('.message_user_area .text_group');\r\n\r\n            if(group_message) {\r\n                var use_nlp = group_message.find('input.use_nlp:checked').val(),\r\n                    select_nlp = group_message.find('select.select_nlp');\r\n\r\n                if(use_nlp != void 0 && use_nlp) {\r\n                    select_nlp.removeClass('hidden');\r\n                } else {\r\n                    select_nlp.addClass('hidden');\r\n                }\r\n            }\r\n            if(icheck_change_event) {\r\n                getDataUserFromInput(type_text);\r\n            }\r\n        }\r\n    });\r\n\r\n    $('.message_user_area select.select_nlp').on('change', function(event){\r\n        var user_message_type    = userMessageType(),\r\n            type                 = common_data['user_content_type'];\r\n\r\n        if(user_message_type == type[type_text]) {\r\n            getDataUserFromInput(type_text);\r\n        }\r\n    });\r\n\r\n    //LIBRARY TYPE\r\n    /**\r\n     * select libraries event\r\n     */\r\n    $('.message_user_area .library_group input.library_list').on('ifChanged', function(event){\r\n        var user_message_type    = userMessageType(),\r\n            type                 = common_data['user_content_type'];\r\n\r\n        if(user_message_type == type[type_library] && icheck_change_event == true) {\r\n            getDataUserFromInput(type_library);\r\n        }\r\n    });\r\n\r\n    //check library when click to label\r\n    $('.message_user_area .library_group .library_label_box').on('click', function(event){\r\n        $(this).prev('.library_input_box').iCheck('toggle');\r\n    });\r\n\r\n    //API VARIABLE SETTING TYPE\r\n    $('.message_user_area .api_variable_setting_group select.api_variable').select2({\r\n        minimumResultsForSearch: -1\r\n    });\r\n    $('.message_user_area .api_variable_setting_group select.api_variable, .message_user_area .api_variable_setting_group select.select_variable').on('change', function(event){\r\n        getDataUserFromInput(type_api_variable_setting);\r\n    });\r\n\r\n    //COMMON USER TYPE\r\n    $('.message_user_area select.select_variable').on('change', function(event){\r\n        var user_message_type    = userMessageType(),\r\n            type                 = common_data['user_content_type'],\r\n            message_type         = '';\r\n\r\n        switch (user_message_type) {\r\n            case type[type_text]:\r\n                message_type    = type_text;\r\n                break;\r\n            case type[type_library]:\r\n                message_type    = type_library;\r\n                break;\r\n            case type[type_api_variable_setting]:\r\n                message_type    = type_api_variable_setting;\r\n                break;\r\n        }\r\n        if(message_type) {\r\n            getDataUserFromInput(message_type);\r\n        }\r\n    });\r\n\r\n    //checkbox for use variable\r\n    $(document).on('ifChanged', '.message_user_area input.use_variable', function (event) {\r\n        var user_message_type    = userMessageType(),\r\n            type                 = common_data['user_content_type'],\r\n            group_message        = '',\r\n            message_type         = '';\r\n\r\n        switch (user_message_type) {\r\n            case type[type_text]:\r\n                group_message   = $('.message_user_area .text_group');\r\n                message_type    = type_text;\r\n                break;\r\n            case type[type_library]:\r\n                group_message   = $('.message_user_area .library_group');\r\n                message_type    = type_library;\r\n                break;\r\n            case type[type_api_variable_setting]:\r\n                group_message   = $('.message_user_area .api_variable_setting_group');\r\n                message_type    = type_api_variable_setting;\r\n                break;\r\n        }\r\n\r\n        if(group_message) {\r\n            var use_variable = group_message.find('input.use_variable:checked').val(),\r\n                select_variable = group_message.find('select.select_variable');\r\n\r\n            if(use_variable != void 0 && use_variable) {\r\n                select_variable.removeClass('hidden');\r\n            } else {\r\n                select_variable.addClass('hidden');\r\n            }\r\n        }\r\n        if(message_type && icheck_change_event) {\r\n            getDataUserFromInput(message_type);\r\n        }\r\n    });\r\n\r\n    /**\r\n     * focus user library message when click to own answer\r\n     */\r\n    $(document).on('click', '.bot_virtual_box', function (event) {\r\n        $(this).prev('.user_scenario').click();\r\n    });\r\n\r\n    ///////////////////////START ACTION BOT MESAGE\r\n    //get type of bot input textarea\r\n    $('.scenario-body').on('click', '.bot_scenario', function (event) {\r\n        var messages_focus      = $('input.messages_focus'),\r\n            bot_message_name    = $(this).find('.messages_bot_content').attr('name');\r\n\r\n        if (messages_focus.val() != bot_message_name) {\r\n            //set active for bot scenario\r\n            $('.scenario-body .bot_scenario, .scenario-body .user_scenario').removeClass('active');\r\n            $(this).addClass('active');\r\n\r\n            var messages_bot_type = $(this).find('input.messages_bot_type').val();\r\n\r\n            //get type from bot message and set to sliderbar data\r\n            $('#bot_content_type').val(messages_bot_type);\r\n\r\n            //set name bot message to right slidebar\r\n            messages_focus.val(bot_message_name);\r\n\r\n            checkContentBotMessage(messages_bot_type);\r\n            setBotDataToForm();\r\n            setHeightSlidebar();\r\n        }\r\n    });\r\n\r\n    //Change select content type\r\n    $('#bot_content_type').on('change', function (event) {\r\n        var bot_message_current         = botMessageElement(),\r\n            bot_message_current_type    = bot_message_current.next('input.messages_bot_type');\r\n        //check text type and clear content bot message\r\n        var old_type = bot_message_current_type.val();\r\n        if(old_type != $(this).val()) {\r\n            bot_message_current.val('');\r\n        }\r\n        //change type for bot message\r\n        bot_message_current_type.val($(this).val());\r\n\r\n        setDataMediaDemo(true);\r\n        checkContentBotInput($(this).val());\r\n        setHeightSlidebar();\r\n        if ($('.conversation_index').length){\r\n            $('.fixedsidebar-content').slimscroll({\r\n                height: '250px',\r\n            });\r\n        }\r\n    });\r\n\r\n    //event add user + bot\r\n    $('.add_pattern_user').on('click', function (event) {\r\n        if(conversation_page) {\r\n            cloneBot(true);\r\n        } else {\r\n            cloneUser();\r\n            cloneBot();\r\n        }\r\n    });\r\n    //event add bot\r\n    $('.add_pattern_bot').on('click', function (event) {\r\n        cloneBot(true);\r\n    });\r\n\r\n    // add button item\r\n    $('.message_bot_area .footer_message_input .add_item_common').on('click', function (event) {\r\n        var bot_message_type    = botMessageType(),\r\n            type                = common_data['bot_content_type'];\r\n\r\n        if(bot_message_type == type[type_button] || bot_message_type == type[type_confirm]) {\r\n            addButtonBox();\r\n        } else if(bot_message_type == type[type_carousel]) {\r\n            addGenericButton();\r\n        }\r\n    });\r\n\r\n    // add generic item\r\n    $('.message_bot_area .add_group_box .add_item_generic').on('click', function (event) {\r\n        createGenericBox();\r\n    });\r\n\r\n    //*** AJAX ON ***\r\n    // ajax update scenario\r\n    $('.updateScenario').on('click', function (event) {\r\n        validateMessages();\r\n        updateScenario();\r\n    });\r\n\r\n    //-----------------start set value from right sliderbar to bot message\r\n    //TEXT\r\n    $('.message_bot_area .text_group .input_text_type').on('change', function (event) {\r\n        getDataFromInput(type_text);\r\n    });\r\n\r\n    //auto suggest variable by textcomplete\r\n    var variable_list = common_data['variable_list'];\r\n    $('.message_bot_area .text_group .input_text_type').textcomplete([\r\n        {\r\n            match: /@(\\w*)$/,\r\n            search: function (term, callback) {\r\n                callback($.map(variable_list, function (element) {\r\n                    return element.indexOf(term) === 0 ? element : null;\r\n                }));\r\n            },\r\n            index: 1,\r\n            replace: function (element) {\r\n                return ['\\{\\{' + element + '}}', ''];\r\n            }\r\n        }\r\n    ], {\r\n        maxCount: 1000\r\n    });\r\n\r\n    //select file for file and generic type\r\n    $('#scenario-file-list .btn-file-select').on('click', function () {\r\n        var bot_message_type    = botMessageType(),\r\n            type                = common_data['bot_content_type'],\r\n            file_path_input     = $('#scenario-file-list #scenario_file_selected'),\r\n            file_path           = file_path_input.val();\r\n\r\n        //set file url for image input\r\n        if(file_path != '' && file_path != void 0) {\r\n            if(bot_message_type == type[type_file]) {\r\n                $('.file_group .input_url_box.focus textarea').val(file_path);\r\n                getDataFromInput(type_file);\r\n            } else if(bot_message_type == type[type_button]) {\r\n                $('.button_group .button_container input.image_url').val(file_path);\r\n                getDataFromInput(type_button);\r\n            } else if(bot_message_type == type[type_carousel]) {\r\n                var genericActive = genericActiveElement();\r\n                genericActive.find('input.image_url').val(file_path);\r\n                getDataFromInput(type_carousel);\r\n            } else if(bot_message_type == type[type_imagemap]) {\r\n                $('.imagemap_group textarea.imagemap_url').val(file_path);\r\n                getDataFromInput(type_imagemap);\r\n            }\r\n            //clear val file_path_input in popup file list\r\n            file_path_input.val('');\r\n        }\r\n    });\r\n    //FILE\r\n    $('.file_group textarea').on('change', function (event) {\r\n        getDataFromInput(type_file);\r\n    });\r\n    $('.file_group textarea').on('keypress', function (event) {\r\n        getDataFromInput(type_file);\r\n    });\r\n    //set focus for fill data from file select popup\r\n    $('.file_group .file_select_box').on('click', function (event) {\r\n        $('.file_group .input_url_box').removeClass('focus');\r\n        $(this).prev('.input_url_box').addClass('focus');\r\n    });\r\n\r\n    //BUTTON\r\n    $(document).on('keypress', '.button_group input', function (event) {\r\n        getDataFromInput(type_button);\r\n    });\r\n    $(document).on('change', '.button_group input, .button_group select', function (event) {\r\n        getDataFromInput(type_button);\r\n    });\r\n    //checkbox for use variable in button\r\n    $(document).on('ifChanged', '.button_group #btn_is_variable', function (event) {\r\n        var btn_group    = $('.button_group'),\r\n            is_variable = btn_group.find('input#btn_is_variable:checked').val(),\r\n            variable    = btn_group.find('select.button_variable');\r\n        if(is_variable != void 0 && is_variable) {\r\n            variable.removeClass('hidden');\r\n        } else {\r\n            variable.addClass('hidden');\r\n        }\r\n        if(icheck_change_event) {\r\n            getDataFromInput(type_button);\r\n        }\r\n    });\r\n\r\n    //CAROUSEL\r\n    $(document).on('keypress', '.generic_box input', function (event) {\r\n        getDataFromInput(type_carousel);\r\n    });\r\n    $(document).on('change', '.generic_box input, .generic_box select', function (event) {\r\n        getDataFromInput(type_carousel);\r\n    });\r\n\r\n    //CONFIRM\r\n    $(document).on('keypress', '.confirm_group input', function (event) {\r\n        getDataFromInput(type_confirm);\r\n    });\r\n    $(document).on('change', '.confirm_group input, .confirm_group select', function (event) {\r\n        getDataFromInput(type_confirm);\r\n    });\r\n    //checkbox for use variable in confirm\r\n    $(document).on('ifChanged', '.confirm_group #confirm_is_variable', function (event) {\r\n        var confirm_group    = $('.confirm_group'),\r\n            is_variable = confirm_group.find('input#confirm_is_variable:checked').val(),\r\n            variable    = confirm_group.find('select.confirm_variable');\r\n        if(is_variable != void 0 && is_variable) {\r\n            variable.removeClass('hidden');\r\n        } else {\r\n            variable.addClass('hidden');\r\n        }\r\n        if(icheck_change_event) {\r\n            getDataFromInput(type_confirm);\r\n        }\r\n    });\r\n\r\n    //LOCATION\r\n    $(document).on('keypress', '.location_group input', function (event) {\r\n        getDataFromInput(type_location);\r\n    });\r\n    $(document).on('change', '.location_group input', function (event) {\r\n        getDataFromInput(type_location);\r\n    });\r\n\r\n    //STICKER\r\n    //select sticker from popup\r\n    $('#line_sticker_select_modal .btn_sticker_select').on('click', function () {\r\n        var bot_message_type    = botMessageType(),\r\n            type                = common_data['bot_content_type'],\r\n            sticker_input       = $('#line_sticker_select_modal #scenario_sticker_selected').val();\r\n\r\n        //set file url for image input\r\n        if(sticker_input != '' && sticker_input != void 0) {\r\n            if(bot_message_type == type[type_sticker]) {\r\n                sticker_input = sticker_input.split('_');\r\n                if(sticker_input.length >= 2) {\r\n                    var sticker_group = $('.sticker_group'),\r\n                        package_id     = sticker_group.find('input.package_id').val(sticker_input[0]),\r\n                        sticker_id     = sticker_group.find('input.sticker_id').val(sticker_input[1]);\r\n\r\n                    //show to preview in input area\r\n                    var sticker_path    = '/images/line_sticker/package_' + sticker_input[0] + '/' + sticker_input[1] + '.png';\r\n                    showStickerInputArea(sticker_path, true);\r\n                    //remove error notice\r\n                    sticker_group.find('label.error').remove();\r\n                }\r\n                getDataFromInput(type_sticker);\r\n            }\r\n        }\r\n    });\r\n\r\n    //IMAGE MAP\r\n    $(document).on('change', '.imagemap_group select, .imagemap_group textarea, .imagemap_group input', function (event) {\r\n        getDataFromInput(type_imagemap);\r\n    });\r\n    $(document).on('keypress', '.imagemap_group textarea', function (event) {\r\n        getDataFromInput(type_imagemap);\r\n    });\r\n    $('#line_imagemap_template_modal .btn-modal-select').on('click', function(event) {\r\n        var modal_imagemap_template = $('#line_imagemap_template_modal .imagemap_template_content'),\r\n            imagemap_area_num = modal_imagemap_template.find('.imagemap_template_box.active').data('template_area');\r\n\r\n        imagemap_area_num = parseInt(imagemap_area_num);\r\n        imagemap_area_num = (imagemap_area_num <=6) ? imagemap_area_num : 6;\r\n        if(imagemap_area_num) {\r\n            var imagemap_group = $('.message_bot_area .imagemap_group'),\r\n                imagemap_template_type = modal_imagemap_template.find('.imagemap_template_box.active').data('template_type');\r\n\r\n            imagemap_group.find('input.template_type').val(imagemap_template_type);\r\n            imagemap_group.find('.imagemap_template_selected').attr('src', imagemap_template_path + 'type_' + imagemap_template_type + '_guide_s.png');\r\n            addImageMapButton(imagemap_area_num);\r\n\r\n            //get data if select template by user, not js\r\n            if(event.originalEvent != void 0) {\r\n                getDataFromInput(type_imagemap);\r\n            }\r\n        }\r\n    });\r\n\r\n    //API\r\n    $('.message_bot_area .api_group select.api_select').select2({\r\n        minimumResultsForSearch: -1\r\n    });\r\n    //select api event\r\n    $('.message_bot_area .api_group select.api_select').on('change', function(event){\r\n        getDataFromInput(type_api);\r\n    });\r\n\r\n    //SCENARIO CONNECT\r\n    $('.message_bot_area .scenario_connect_group select.scenario_select').select2({\r\n        minimumResultsForSearch: -1\r\n    });\r\n    //select api event\r\n    $('.message_bot_area .scenario_connect_group select.scenario_select').on('change', function(event){\r\n        getDataFromInput(type_scenario_connect);\r\n    });\r\n\r\n    //MAIL\r\n    $('.message_bot_area .mail_group select.mail_select').select2({\r\n        minimumResultsForSearch: -1\r\n    });\r\n    //select api event\r\n    $('.message_bot_area .mail_group select.mail_select').on('change', function(event){\r\n        getDataFromInput(type_mail);\r\n    });\r\n\r\n    //delete user message box\r\n    $(document).on('click', '.user_scenario .delete_user_box', function (event) {\r\n        deleteBotVirtual();\r\n        $(this).parent('.user_scenario').remove();\r\n        message_area_select(null);\r\n        generateNameMessageBox();\r\n    });\r\n\r\n    //delete bot message box\r\n    $(document).on('click','.bot_scenario .delete_bot_box',function(e){\r\n        $(this).parent('.bot_scenario').remove();\r\n        message_area_select(null);\r\n        generateNameMessageBox();\r\n        $('input.messages_focus').val('');\r\n    });\r\n\r\n    // remove button block and button in confirm block\r\n    $(document).on(\"click\", '.btn_box .delete_btn_box', function (event) {\r\n        var bot_message_type    = botMessageType(),\r\n            type                = common_data['bot_content_type'];\r\n\r\n        switch (bot_message_type) {\r\n            case type[type_button]: {\r\n                if($('.button_group .button_container .btn_box').length > 1) {\r\n                    $(this).parents('.btn_box').remove();\r\n                    checkButtonBox();\r\n                    getDataFromInput(type_button);\r\n                }\r\n                break;\r\n            }\r\n            case type[type_confirm]: {\r\n                if($('.confirm_group .confirm_container .btn_box').length > 1) {\r\n                    $(this).parents('.btn_box').remove();\r\n                    checkButtonBox();\r\n                    getDataFromInput(type_confirm);\r\n                }\r\n                break;\r\n            }\r\n        }\r\n    });\r\n\r\n    // remove generic block\r\n    $(document).on(\"click\", '.generic_box .delete_generic_box', function (event) {\r\n        if($('.generic_container .generic_box').length > 1) {\r\n            $(this).parents('.generic_box').remove();\r\n            //----Carousel process\r\n            //delete generic indicators item of generic_box\r\n            $('.generic_indicators li.active').remove();\r\n            //re-set index for generic indicators\r\n            $('.generic_indicators li').each(function (index, value) {\r\n                $(this).attr('data-slide-to', index);\r\n            });\r\n            //set active for first indicators and first generic_box\r\n            $('.generic_indicators li:first-child').addClass('active');\r\n            $('.generic_container .generic_box:first-child').addClass('active');\r\n            checkCarouselSlide();\r\n            ////////////////////\r\n            checkGenericBox();\r\n            getDataFromInput(type_carousel);\r\n            check_add_item_common();\r\n            setHeightSlidebar();\r\n        }\r\n    });\r\n\r\n    // remove generic button block\r\n    $(document).on(\"click\", '.button_type_container .delete_btn_box', function (event) {\r\n        var generic_element = $(this).parents('.generic_box');\r\n        if(generic_element.find('.button_type_container').length > 1) {\r\n            $(this).parents('.button_type_container').remove();\r\n            checkGenericButtonBox();\r\n            getDataFromInput(type_carousel);\r\n        }\r\n    });\r\n\r\n    //add a message block if not exist any user message and bot message\r\n    if(!$('.scenario_block .user_scenario').length && !$('.scenario_block .bot_scenario').length) {\r\n        $('.add_pattern_bot').click();\r\n    }\r\n\r\n    //re-sort position message box\r\n    $('.scenario_block').sortable({\r\n        items: \".message_box\",\r\n        cancel: \".bot_preview_demo, .bot_media_demo, .user_form_box\",\r\n        activate: function(event, ui) {\r\n            $('.scenario_block .bot_virtual_box').remove();\r\n        },\r\n        stop: function(event, ui) {\r\n            //re-generate bot for message library\r\n            generateBotVirtual();\r\n            generateNameMessageBox();\r\n            //update name of message box focusing to messages_focus input\r\n            var msg_focusing = getMessageBoxActive(),\r\n                msg_name     = '';\r\n            if(msg_focusing.hasClass('user_scenario')) {\r\n                msg_name = msg_focusing.find('input.messages_user_content').attr('name');\r\n            } else if(msg_focusing.hasClass('bot_scenario')) {\r\n                msg_name = msg_focusing.find('textarea.messages_bot_content').attr('name');\r\n            }\r\n            $('input.messages_focus').val(msg_name);\r\n        }\r\n    });\r\n\r\n    //generate virtual bot message for user type\r\n    generateBotVirtual();\r\n\r\n    //generate name for input message block\r\n    generateNameMessageBox();\r\n\r\n    //carousel slide when select generic message\r\n    $('.generic_carousel').bind('slid.bs.carousel', function (e) {\r\n        checkCarouselSlide();\r\n        checkGenericButtonBox();\r\n    });\r\n    uploadFile();\r\n    //disable submit message form\r\n    $(\".scenario-edit form.scenarioForm\").submit(function (e) {\r\n        e.preventDefault();\r\n    });\r\n});\r\n\r\n/**\r\n * get data from slidebar input for message box by type\r\n * @param type\r\n */\r\nfunction getDataUserFromInput(type) {\r\n    switch (type) {\r\n        case type_text: getDataUserText(); break;\r\n        case type_library: getDataUserLibrary(); break;\r\n        case type_api_variable_setting: getDataUserApiVariableSetting(); break;\r\n    }\r\n    setUserVariable(type);\r\n    setUserDataMediaDemo();\r\n}\r\n\r\n/**\r\n * get data text fill to message box\r\n */\r\nfunction getDataUserText() {\r\n    var user_message = userMessageElement(),\r\n        user_input_text = userInputText();\r\n    user_message.val(user_input_text.val());\r\n    setUserNlp(type_text);\r\n    createTag();\r\n}\r\n\r\n/**\r\n * get option selected to user input\r\n */\r\nfunction getDataUserLibrary() {\r\n    var user_current    = userMessageElement(),\r\n        type = common_data['user_content_type'],\r\n        lib_value       = $.map($('.message_user_area .library_group input.library_list:checked'), function(c){return c.value;});\r\n\r\n    if(lib_value.length > 0) {\r\n        lib_value = lib_value.join(',');\r\n    }\r\n    user_current.val(lib_value);\r\n    createTag();\r\n}\r\n\r\n/**\r\n * get data api variable setting fill to message box\r\n */\r\nfunction getDataUserApiVariableSetting() {\r\n    var user_message = userMessageElement(),\r\n        api_variable = apiVariableSettingElement();\r\n\r\n    user_message.val(api_variable.val());\r\n}\r\n\r\n/**\r\n * create tag by value in active input user message\r\n */\r\nfunction createTag() {\r\n    var user_box        = userMessageBoxElement(),\r\n        user_type       = userMessageType(),\r\n        user_value      = userMessageContent(),\r\n        tagit_box       = user_box.find('ul.tagit'),\r\n        type            = common_data['user_content_type'];\r\n\r\n    tagit_box.find('li').remove();\r\n    if(user_value) {\r\n        $(user_value.split(',')).each(function (index, value) {\r\n            if(value) {\r\n                value = $.trim(value);\r\n                var cloneChar = $('.scenario_block_origin .tagit-choice-block .tagit-choice').clone();\r\n                //if type is library then get label to show tag\r\n                if(user_type == type[type_library]) {\r\n                    var library_item   = libraryListElement(value),\r\n                        library_label  = library_item.data('name'),\r\n                        label_bot_smg  = $('.scenario_block_origin .bot_virtual_box .bot_library_view').data('label');\r\n                    value = label_bot_smg + '[' + library_label + ']';\r\n                }\r\n                cloneChar.find(\".taget-label\").text(value);\r\n                tagit_box.append(cloneChar);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\n/**\r\n * set select variable in user message\r\n * @param user_message_type\r\n */\r\nfunction setUserVariable(user_message_type) {\r\n    var group_message   = '',\r\n        select_variable = '';\r\n\r\n    switch (user_message_type) {\r\n        case type_text:\r\n            group_message   = $('.message_user_area .text_group');\r\n            break;\r\n        case type_library:\r\n            group_message   = $('.message_user_area .library_group');\r\n            break;\r\n        case type_api_variable_setting:\r\n            group_message   = $('.message_user_area .api_variable_setting_group');\r\n            break;\r\n    }\r\n\r\n    //get variable to imput message\r\n    var use_variable = group_message.find('input.use_variable:checked').val();\r\n    if(use_variable != void 0 && use_variable && group_message.find('select.select_variable').val()) {\r\n        select_variable = group_message.find('select.select_variable').val();\r\n    }\r\n    userMessageVariable(select_variable);\r\n}\r\n\r\n/**\r\n * set select nlp in user message\r\n * @param user_message_type\r\n */\r\nfunction setUserNlp(user_message_type) {\r\n    var group_message   = '',\r\n        select_nlp = '';\r\n\r\n    switch (user_message_type) {\r\n        case type_text:\r\n            group_message   = $('.message_user_area .text_group');\r\n            break;\r\n        case type_library:\r\n            group_message   = $('.message_user_area .library_group');\r\n            break;\r\n        case type_api_variable_setting:\r\n            group_message   = $('.message_user_area .api_variable_setting_group');\r\n            break;\r\n    }\r\n\r\n    //get variable to imput message\r\n    var use_nlp = group_message.find('input.use_nlp:checked').val();\r\n    if(use_nlp != void 0 && use_nlp && group_message.find('select.select_nlp').val()) {\r\n        select_nlp = group_message.find('select.select_nlp').val();\r\n    }\r\n    userMessageNlp(select_nlp);\r\n}\r\n\r\n/**\r\n * set data for common variable\r\n */\r\nfunction setDataCommon(key, value) {\r\n    common_data[key] = value;\r\n}\r\n\r\n//add new user box\r\nfunction cloneUser() {\r\n\tvar clone = $('.scenario_block_origin .user_scenario').clone();\r\n\t$('.scenario_block').append(clone);\r\n}\r\n\r\n//add new bot box\r\nfunction cloneBot(focus) {\r\n\tvar clone = $('.scenario_block_origin .bot_scenario').clone();\r\n    $('.scenario_block').append(clone);\r\n    //reset name for mesage input\r\n    generateNameMessageBox();\r\n    //focus to new bot box\r\n    if(focus != void 0 && focus) {\r\n        clone.click();\r\n    } else {\r\n        $('.scenario_block .message_box.user_scenario').last().click();\r\n    }\r\n}\r\n\r\n//add new bot library box after user library mesage\r\nfunction cloneBotVirtual(after_elm, type_message) {\r\n    if(after_elm == void 0 || after_elm == '') {\r\n        var user_message = userMessageBoxElement();\r\n        after_elm = user_message.parents('.user_scenario');\r\n    }\r\n    if(!after_elm.next().hasClass('bot_virtual_box')) {\r\n        var clone_bot = $('.scenario_block_origin .bot_virtual_box').clone();\r\n        after_elm.after(clone_bot);\r\n    }\r\n\r\n    //re show, hide for each type user message\r\n    var type = common_data['user_content_type'],\r\n        bot_library_view = after_elm.next().find('.bot_library_view'),\r\n        bot_api_view = after_elm.next().find('.bot_api_variable_setting_view');\r\n    switch (type_message) {\r\n        case type[type_library]:\r\n            bot_library_view.removeClass('hidden');\r\n            bot_api_view.addClass('hidden');\r\n            break;\r\n        case type[type_api_variable_setting]:\r\n            bot_library_view.addClass('hidden');\r\n            bot_api_view.removeClass('hidden');\r\n            break;\r\n    }\r\n}\r\n\r\n//Generate for all bot library\r\nfunction generateBotVirtual() {\r\n    var type = common_data['user_content_type'];\r\n    $('.scenario_block .user_scenario').each(function (i, e) {\r\n        var bot_type = $(this).find('input.messages_user_type').val();\r\n        if(bot_type && (bot_type == type[type_library] || bot_type == type[type_api_variable_setting])) {\r\n            cloneBotVirtual($(this), bot_type);\r\n        }\r\n    });\r\n}\r\n\r\n//add new bot virtual box after user library mesage\r\nfunction deleteBotVirtual() {\r\n    var user_message    = userMessageBoxElement();\r\n    user_message.parents('.user_scenario').next('.bot_virtual_box').remove();\r\n}\r\n\r\n/**\r\n * add new button block\r\n */\r\nfunction addButtonBox() {\r\n    var bot_message_type    = botMessageType(),\r\n        type                = common_data['bot_content_type'],\r\n        container,\r\n        button_max          = null;\r\n\r\n    switch (bot_message_type) {\r\n        case type[type_button]: {\r\n            container  = $('.button_group .button_container');\r\n            button_max = max_button_block;\r\n            break;\r\n        }\r\n        case type[type_confirm]: {\r\n            container  = $('.confirm_group .confirm_container');\r\n            button_max = max_confirm_button;\r\n            break;\r\n        }\r\n    }\r\n    var button_box_count = container.find('.btn_box').length;\r\n\r\n    if(button_max != null && container && button_box_count < max_button_block) {\r\n        var clone = $('.scenario_block_origin .btn_box').clone();\r\n        //if is confirm then remove delete button box\r\n        if(bot_message_type == type[type_confirm]) {\r\n            clone.find('.button_delete_box').remove();\r\n        }\r\n        container.append(clone);\r\n        checkButtonBox();\r\n    }\r\n}\r\n\r\n/**\r\n * add new generic child button\r\n */\r\nfunction addGenericButton() {\r\n    var generic_active = genericActiveElement();\r\n    if(generic_active.find('.button_type_container').length < max_carousel_button) {\r\n        var clone_button = $('.scenario_block_origin .generic_button_template .button_type_container').clone();\r\n        generic_active.find('.generic_button_container').append(clone_button);\r\n        checkGenericButtonBox();\r\n    }\r\n}\r\n\r\n/**\r\n * add new image map child button\r\n */\r\nfunction addImageMapButton(imagemap_area_num) {\r\n    if(imagemap_area_num > 0) {\r\n        var imagemap_group = $('.message_bot_area .imagemap_group .imagemap_container'),\r\n            button_box_count = imagemap_group.find('.btn_box').length;\r\n\r\n        if(button_box_count < imagemap_area_num) {\r\n            //add button\r\n            for(var i=button_box_count; i<imagemap_area_num; i++) {\r\n                var clone = $('.scenario_block_origin .btn_box').clone(),\r\n                    template_button = common_data['template_button'];\r\n                clone.prepend('<label class=\"col-md-12\">' + imagemap_btn_label[i] + '</label>');\r\n                clone.find('.button_delete_box, .button_title_box').remove();\r\n                //remove postback option\r\n                clone.find('select.button_sub_type option[value=\"' + template_button['postback'] + '\"]').remove();\r\n                imagemap_group.append(clone);\r\n            }\r\n        } else if(button_box_count > imagemap_area_num) {\r\n            //remove button\r\n            for(var i=imagemap_area_num; i<button_box_count; i++) {\r\n                var btn_box_last = imagemap_group.find('.btn_box').last();\r\n                btn_box_last.remove();\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * add new generic block\r\n */\r\nfunction createGenericBox() {\r\n    if($('.generic_group .generic_container .generic_box').length < max_carousel_item) {\r\n        var clone = $('.scenario_block_origin .generic_box').clone();\r\n        $('.generic_container').append(clone);\r\n        checkGenericBox();\r\n\r\n        //------Carousel process\r\n        //param false: set active for tem\r\n        addCarouselIndicator('generic_indicators', false);\r\n        checkCarouselSlide();\r\n\r\n        //add a button for new Generic\r\n        addGenericButton();\r\n    }\r\n}\r\n\r\nfunction uploadFile() {\r\n    $(document).on('click', '.upload_image', function () {\r\n        var box_message = $(this).parents('.file_select_box').find('.box_message'),\r\n            allowdtypes = $(this).data('image_type'),\r\n            max_size_image = 40, //Mb\r\n            max_size_video = 40; //Mb\r\n\r\n        allowdtypes = (allowdtypes != void 0 && allowdtypes != '') ? allowdtypes : 'jpeg,jpg,png,mp4';\r\n        allowdtypes = allowdtypes.split(',');\r\n        // image: jpeg, jpg\r\n        // video: mp4, jpeg, jpg\r\n        // imagemap, button, generic: jpeg, jpg, png.\r\n        //Image: max 1mb, video: max 10mb\r\n\r\n        $(this).fileupload({\r\n            dropZone: $(this),\r\n            add: function (e, data) {\r\n                setMesssage(null);\r\n                var data_file_upload = data.files[0];\r\n                var error_name = '';\r\n                var fileType = data_file_upload.name.split('.').pop().toLowerCase();\r\n                var max_size_file = (fileType == 'mp4') ? max_size_video : max_size_image;\r\n\r\n                if(allowdtypes.indexOf(fileType) < 0) {\r\n                    error_name = $(this).data('error_type');\r\n                    error_name = error_name.replace(':values', allowdtypes.join(', '));\r\n\r\n                } else if (data_file_upload.size > max_size_file*1024*1024) {//Byte\r\n                    error_name = $(this).data('error_size');\r\n                    error_name = error_name.replace(':max', max_size_file*1024); //Kb\r\n                }\r\n\r\n                //check dimension image\r\n                var checked_dimension_flg = true;\r\n                var bot_message_type = botMessageType(),\r\n                    type = common_data['bot_content_type'];\r\n                if(error_name == '' && fileType != 'mp4' && bot_message_type == type[type_imagemap]) {\r\n                    checked_dimension_flg = false;\r\n                    error_name = $(this).data('error_dimension').replace(':width', imagemap_base_size_w).replace(':height', imagemap_base_size_h);\r\n                    //get dimension image\r\n                    var image = new Image();\r\n                    image.onload = function () {\r\n                        if (imagemap_base_size_w == this.naturalWidth && imagemap_base_size_h == this.naturalHeight) {\r\n                            error_name = '';\r\n                        }\r\n                        checked_dimension_flg = true;\r\n                    };\r\n                    image.src = URL.createObjectURL(data_file_upload);\r\n                }\r\n                //wait because image.onload run after\r\n                waitForCheckDimension();\r\n                var time_wait_check = 0;\r\n                function waitForCheckDimension(){\r\n                    //if check dimension is not finish or check is less than 5s\r\n                    if (checked_dimension_flg || time_wait_check >= 50) {\r\n                        if(error_name != '') {\r\n                            setMesssage(error_name, 1, box_message, true);\r\n                        }else{\r\n                            data.submit();\r\n                        }\r\n                    } else {\r\n                        time_wait_check++;\r\n                        setTimeout(function(){waitForCheckDimension()}, 100);\r\n                    }\r\n                }\r\n\r\n            },fail:function(e, data){\r\n                var errors = $.parseJSON(data.jqXHR.responseText);\r\n                if(errors.error != void 0 && errors.error != '') {\r\n                    setMesssage(errors.error , 1, box_message, true);\r\n                }\r\n\r\n            },success:function (data) {\r\n                if(data != void 0){\r\n                    if(data.success) {\r\n                        if(data.path_file != void 0){\r\n                            $('#scenario-file-list #scenario_file_selected').val(data.path_file);\r\n                            $('#scenario-file-list .btn-file-select').click();\r\n                            setMesssage(data.success_mess, 2,box_message, true);\r\n                        }\r\n                    } else {\r\n                        var message = '';\r\n                        var errors = data.errors;\r\n                        for(var key in errors){\r\n                            message += errors[key]\r\n                        }\r\n                        setMesssage(message, 1, box_message, true);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    });\r\n}\r\n\r\n// set file size\r\nfunction formatFileSize(bytes) {\r\n    if (typeof bytes !== 'number') {\r\n        return '';\r\n    }\r\n    if (bytes >= 1000000000) {\r\n        return (bytes / 1000000000).toFixed(2) + ' GB';\r\n    }\r\n    if (bytes >= 1000000) {\r\n        return (bytes / 1000000).toFixed(2) + ' MB';\r\n    }\r\n    return (bytes / 1000).toFixed(2) + ' KB';\r\n}\r\n\r\n//add Carousel indicators follow generic item\r\nfunction addCarouselIndicator(parent_class, first_active) {\r\n    $('.' + parent_class).append('<li data-slide-to=\"0\" data-target=\"#c-slide\"></li>');\r\n\r\n    //re-set index for generic indicators\r\n    $('.generic_indicators li').each(function (index, value) {\r\n        $(this).attr('data-slide-to', index);\r\n    });\r\n    //set active for first indicators and first generic_box\r\n    var indicator = $('.generic_indicators'),\r\n        container = $('.generic_container');\r\n\r\n    indicator.find('li').removeClass('active');\r\n    container.find('.generic_box').removeClass('active');\r\n    if(first_active) {\r\n        indicator.find('li:first-child').addClass('active');\r\n        container.find('.generic_box:first-child').addClass('active');\r\n    } else {\r\n        indicator.find('li:last-child').addClass('active');\r\n        container.find('.generic_box:last-child').addClass('active');\r\n    }\r\n}\r\n\r\n/**\r\n * generate name for user and bot message input\r\n */\r\nfunction generateNameMessageBox() {\r\n    var position        = 0,\r\n        message_type    = common_data['message_type'];\r\n    //set index (position) for mesage block\r\n    $('.scenario_block').children().each(function (index, element) {\r\n        if($(this).hasClass('user_scenario')) {\r\n            var prefix_user = 'message[' + message_type['user'] + '][' + position + ']';\r\n            $(this).find('.messages_user_content').attr('name', prefix_user + '[content]');\r\n            $(this).find('.messages_user_type').attr('name', prefix_user + '[type]');\r\n            $(this).find('.messages_user_variable').attr('name', prefix_user + '[variable]');\r\n            $(this).find('.messages_user_nlp').attr('name', prefix_user + '[nlp]');\r\n            position++;\r\n        }\r\n        if($(this).hasClass('bot_scenario')) {\r\n            var prefix_bot = 'message[' + message_type['bot'] + '][' + position + ']';\r\n            $(this).find('.messages_bot_content').attr('name', prefix_bot + '[content]');\r\n            $(this).find('.messages_bot_type').attr('name', prefix_bot + '[type]');\r\n            position++;\r\n        }\r\n    });\r\n}\r\n\r\n//hide, show add_group_box button\r\nfunction checkAddGroupButtonBox() {\r\n    var add_group_btn       = $('.message_bot_area .add_group_box'),\r\n        bot_message_type    = botMessageType(),\r\n        type                = common_data['bot_content_type'],\r\n        item_btn_count,\r\n        max_num;\r\n\r\n    if(bot_message_type == type[type_carousel]) {\r\n        item_btn_count      = $('.generic_group .generic_container .generic_box').length;\r\n        max_num             = max_carousel_item;\r\n    }\r\n    if(item_btn_count >= max_num) {\r\n        add_group_btn.hide();\r\n    } else {\r\n        add_group_btn.show();\r\n    }\r\n}\r\n\r\n//hide, show by check number button box and button in confirm box\r\nfunction checkButtonBox() {\r\n    var bot_message_type    = botMessageType(),\r\n        type                = common_data['bot_content_type'],\r\n        delete_button       = $('.message_container_input .btn_box .delete_btn_box'),\r\n        button_box_count    = null;\r\n\r\n    switch (bot_message_type) {\r\n        case type[type_button]: {\r\n            button_box_count = $('.button_group .button_container .btn_box').length;\r\n            break;\r\n        }\r\n    }\r\n\r\n    if(button_box_count != null) {\r\n        //show, hide delete button box\r\n        if(button_box_count <= 1) {\r\n            delete_button.hide();\r\n        } else {\r\n            delete_button.show();\r\n        }\r\n        check_add_item_common();\r\n    }\r\n}\r\n\r\n//hide, show by check number generic button box\r\nfunction checkGenericButtonBox() {\r\n    var button_box          = genericActiveElement(),\r\n        button_box_count    = $(button_box).find('.generic_button_container .button_type_container').length,\r\n        delete_button       = $(button_box).find('.delete_btn_box');\r\n    //show, hide delete button\r\n    if(button_box_count <= 1) {\r\n        delete_button.hide();\r\n    } else {\r\n        delete_button.show();\r\n    }\r\n    check_add_item_common();\r\n}\r\n\r\n//show, hide add new button for button type and generic type\r\nfunction check_add_item_common() {\r\n    var add_item_common     = $('.footer_message_input .add_item_common'),\r\n        bot_message_type    = botMessageType(),\r\n        type                = common_data['bot_content_type'],\r\n        item_btn_count,\r\n        max_num;\r\n\r\n    if(bot_message_type == type[type_button]) {\r\n        item_btn_count  = $('.button_group .button_container .btn_box').length;\r\n        max_num         = max_button_block;\r\n    } else if(bot_message_type == type[type_carousel]) {\r\n        var genericActive   = genericActiveElement();\r\n        item_btn_count      = genericActive.find('.generic_button_container .button_type_container').length;\r\n        max_num             = max_carousel_button;\r\n    }\r\n\r\n    if(item_btn_count >= max_num) {\r\n        add_item_common.hide();\r\n    } else {\r\n        add_item_common.show();\r\n    }\r\n}\r\n\r\n//hide, show by check number button box\r\nfunction checkGenericBox() {\r\n    var generic_box_count   = $('.generic_container .generic_box').length,\r\n        delete_button       = $('.generic_box .delete_generic_box');\r\n\r\n    //show, hide delete generic box\r\n    if(generic_box_count <= 1) {\r\n        delete_button.hide();\r\n    } else {\r\n        delete_button.show();\r\n    }\r\n    checkAddGroupButtonBox();\r\n}\r\n\r\n/**\r\n * change bot text type input\r\n * @returns {*|jQuery|HTMLElement}\r\n */\r\nfunction botTextTypeInput(value) {\r\n    var input = $('.message_bot_area .text_group .input_text_type');\r\n    if(value != void 0) {\r\n        input.val(value);\r\n    }\r\n    return input;\r\n}\r\n\r\n/**\r\n * set value bot message from input text\r\n * @param value\r\n */\r\nfunction changeDataBotMessage(value) {\r\n    var bot_message = botMessageElement();\r\n    bot_message.val(value);\r\n}\r\n\r\n/**\r\n * get message active by fucusing\r\n * @returns {*|jQuery|HTMLElement}\r\n */\r\nfunction getMessageBoxActive() {\r\n    return $('.scenario_block .message_box.active');\r\n}\r\n\r\n/**\r\n * return bot message content focusing\r\n * @returns {*}\r\n */\r\nfunction botMessageContent() {\r\n    var bot_input = botMessageElement();\r\n    return bot_input.val();\r\n}\r\n\r\n/**\r\n * return bot message type element\r\n * @returns {*}\r\n */\r\nfunction botMessageType() {\r\n    var bot_box    = botMessageBoxElement(),\r\n        bot_type   = bot_box.find('input.messages_bot_type').val();\r\n    return bot_type;\r\n}\r\n\r\n/**\r\n * return bot message element\r\n */\r\nfunction botMessageElement() {\r\n    return $(\".bot_scenario textarea[name='\" + $('input.messages_focus').val() + \"']\");\r\n}\r\n\r\n/**\r\n * return bot message box\r\n */\r\nfunction botMessageBoxElement() {\r\n    var bot_input = botMessageElement();\r\n    return bot_input.parents('.bot_form_box');\r\n}\r\n\r\n/**\r\n * return current active generic\r\n */\r\nfunction genericActiveElement() {\r\n    return $('.generic_group .generic_box.active');\r\n}\r\n\r\n/**\r\n * return text input of user message\r\n * @returns {*|jQuery|HTMLElement}\r\n */\r\nfunction userInputText() {\r\n    return $('.message_user_area .text_group input.user_text_type');\r\n}\r\n\r\n/**\r\n * return user message content focusing\r\n * @returns {*}\r\n */\r\nfunction userMessageContent() {\r\n    var user_input = userMessageElement();\r\n    return user_input.val();\r\n}\r\n\r\n/**\r\n * return user message type element\r\n * @returns {*}\r\n */\r\nfunction userMessageType() {\r\n    var user_message = userMessageBoxElement(),\r\n        user_type    = user_message.find('input.messages_user_type').val();\r\n    return user_type;\r\n}\r\n\r\n/**\r\n * return user message element\r\n */\r\nfunction userMessageElement() {\r\n    return $(\".user_scenario input[name='\" + $('input.messages_focus').val() + \"']\");\r\n}\r\n\r\n/**\r\n * return user message box\r\n */\r\nfunction userMessageBoxElement() {\r\n    var user_message = userMessageElement();\r\n    return user_message.parents('.user_form_box');\r\n}\r\n\r\n/**\r\n * return user message variable focusing\r\n * @returns {*}\r\n */\r\nfunction userMessageVariable(value) {\r\n    var user_message = userMessageBoxElement(),\r\n        variable_elm = user_message.find('input.messages_user_variable');\r\n    if(value != void 0) {\r\n        return variable_elm.val(value);\r\n    }\r\n    return variable_elm.val();\r\n}\r\n\r\n/**\r\n * return user message nlp focusing\r\n * @returns {*}\r\n */\r\nfunction userMessageNlp(value) {\r\n    var user_message = userMessageBoxElement(),\r\n        nlp_elm = user_message.find('input.messages_user_nlp');\r\n    if(value != void 0) {\r\n        return nlp_elm.val(value);\r\n    }\r\n    return nlp_elm.val();\r\n}\r\n\r\n/**\r\n * return list library checkbox element\r\n * @returns {*|jQuery|HTMLElement}\r\n */\r\nfunction libraryListElement(value) {\r\n    if(value != void 0 && value != '') {\r\n        return $(\".message_user_area .library_group input.library_list[value='\" + value + \"']\");\r\n    }\r\n    return $('.message_user_area .library_group input.library_list');\r\n}\r\n\r\n/**\r\n * return api variable select element\r\n * @returns {*|jQuery|HTMLElement}\r\n */\r\nfunction apiVariableSettingElement(value) {\r\n    var api_variable = $('.message_user_area .api_variable_setting_group select.api_variable');\r\n    if(value != void 0 && value != '') {\r\n        return api_variable.val(value).trigger('change.select2');\r\n    }\r\n    return api_variable;\r\n}\r\n\r\n/**\r\n * check or uncheck library item\r\n * @param event\r\n * @param element\r\n * @returns {*|jQuery|HTMLElement}\r\n */\r\nfunction icheckAuto(event, element) {\r\n    if(element != void 0 && element != '') {\r\n        if(event == 'check') {\r\n            element.iCheck('check');\r\n        } else if(event == 'uncheck') {\r\n            element.iCheck('uncheck');\r\n        }\r\n\r\n    }\r\n}\r\n\r\n/**\r\n * @param value\r\n */\r\nfunction apiElement(value) {\r\n    var api_select = $(\".message_bot_area .api_group select.api_select\");\r\n    if(value != void 0 && value != '') {\r\n        return api_select.val(value).trigger('change.select2');\r\n    }\r\n    return api_select;\r\n}\r\n\r\n/**\r\n * @param value\r\n */\r\nfunction scenarioConnectElement(value) {\r\n    var scenario_select = $('.message_bot_area .scenario_connect_group select.scenario_select');\r\n    if(value != void 0 && value != '') {\r\n        return scenario_select.val(value).trigger('change.select2');\r\n    }\r\n    return scenario_select;\r\n}\r\n\r\n/**\r\n * @param value\r\n */\r\nfunction mailElement(value) {\r\n    var mail_select = $('.message_bot_area .mail_group select.mail_select');\r\n    if(value != void 0 && value != '') {\r\n        return mail_select.val(value).trigger('change.select2');\r\n    }\r\n    return mail_select;\r\n}\r\n\r\n\r\n/**\r\n * show, hide box message and button preview\r\n */\r\nfunction checkViewMediaDemo() {\r\n    var bot_box  = botMessageBoxElement(),\r\n        bot_type = botMessageType(),\r\n        type     = common_data['bot_content_type'];\r\n\r\n    //show if is not api or scenario connect type\r\n    var preview = bot_box.find('.preview');\r\n    if (bot_type == type[type_text] || bot_type == type[type_api] || bot_type == type[type_scenario_connect] || bot_type == type[type_mail]) {\r\n        preview.addClass('hidden');\r\n    } else {\r\n        preview.removeClass('hidden');\r\n    }\r\n}\r\n\r\n/**\r\n * show preview sticker\r\n * @param img_path\r\n */\r\nfunction showStickerInputArea(img_path, show_message_demo) {\r\n    if(img_path != void 0 && img_path != '') {\r\n        //show to preview in message preview box\r\n        if(show_message_demo != void 0 && show_message_demo) {\r\n            var preview_url = img_path.replace('.png', '_key.png');\r\n            if(!imageExist(preview_url)) {\r\n                preview_url = img_path;\r\n            }\r\n            var bot_message_input   = botMessageBoxElement();\r\n            bot_message_input.find('.bot_preview_demo img.preview_img').attr('src', preview_url);\r\n        }\r\n\r\n        //show to preview in input\r\n        //if not exist large image then get small image\r\n        if(!imageExist(img_path)) {\r\n            img_path = img_path.replace('.png', '_key.png');\r\n        }\r\n        $('.sticker_group .sticker_preview img').attr('src', img_path);\r\n    }\r\n}\r\n\r\n/**\r\n * get data from slidebar input for message box by type\r\n * @param type\r\n */\r\nfunction getDataFromInput(type) {\r\n    switch (type) {\r\n        case type_text:             getDataText(); break;\r\n        case type_button:           getDataButton(); break;\r\n        case type_carousel:         getDataGeneric(); break;\r\n        case type_file:             getDataFile(); break;\r\n        case type_confirm:          getDataConfirm(); break;\r\n        case type_location:         getDataLocation(); break;\r\n        case type_sticker:          getDataSticker(); break;\r\n        case type_imagemap:         getDataImagemap(); break;\r\n        case type_api:              getDataApi(); break;\r\n        case type_scenario_connect: getDataScenarioConnect(); break;\r\n        case type_mail:             getDataMail(); break;\r\n    }\r\n    //set title for button demo in message content box\r\n    if(type != type_file) {\r\n        setDataMediaDemo();\r\n    }\r\n}\r\n\r\n/**\r\n * get text data to json and fill to message box\r\n */\r\nfunction getDataText() {\r\n    var text_input = botTextTypeInput(),\r\n        text_input = text_input.val();\r\n    var data = {\r\n        'message' : {\r\n            'type' : 'text',\r\n            'text' : text_input\r\n        }\r\n    };\r\n    data = JSON.stringify(data);\r\n    changeDataBotMessage(data);\r\n}\r\n\r\n/**\r\n * get button data to json and fill to message box\r\n */\r\nfunction getDataButton() {\r\n    var button_box              = $('.button_group .button_container'),\r\n        button_title            = button_box.find('input.button_title').val(),\r\n        button_text             = button_box.find('input.button_text').val(),\r\n        image_url               = button_box.find('input.image_url').val(),\r\n        template_button         = common_data['template_button'],\r\n        template_button_flip    = common_data['template_button_flip'],\r\n        variable_id             = '';\r\n\r\n    //set variable if use select box\r\n    if(button_box.find('input.btn_is_variable:checked').val()) {\r\n        variable_id             = button_box.find('select.button_variable').val();\r\n    }\r\n    var data = {\r\n        'variable' : variable_id,\r\n        'message' : {\r\n            'type'      : 'template',\r\n            'altText'   : button_text,\r\n            'template'  : {\r\n                \"type\"              : \"buttons\",\r\n                \"text\"              : button_text\r\n            }\r\n        }\r\n    };\r\n    if(image_url != void 0 && image_url != '') {\r\n        data['message']['template']['thumbnailImageUrl'] = image_url;\r\n    }\r\n    if(button_title != void 0 && button_title != '') {\r\n        data['message']['template']['title'] = button_title;\r\n    }\r\n    data['message']['template']['actions'] = [];\r\n\r\n    $('.button_group .button_container .btn_box').each(function (index, element) {\r\n        var button_sub_title     = $(this).find('input.button_sub_title').val(),\r\n            button_sub_type      = $(this).find('select.button_sub_type').val(),\r\n            button_sub_data      = $(this).find('input.button_sub_data').val(),\r\n            button_sub_scenario  = $(this).find('select.button_sub_scenario').val();\r\n        var button_data = {\r\n            'type'  : template_button_flip[button_sub_type],\r\n            'label' : button_sub_title,\r\n        };\r\n        if(button_sub_type == template_button['uri']) {\r\n            button_data['uri']  = button_sub_data;\r\n        } else {\r\n            if(button_sub_type == template_button['message'] && button_sub_data != void 0 && button_sub_data != '') {\r\n                button_data['text'] = button_sub_data;\r\n            }\r\n            if(button_sub_type == template_button['postback']) {\r\n                if(variable_id == void 0 || variable_id == '') {\r\n                    variable_id = '-1';\r\n                }\r\n                var button_sub_title_base64 = base64Encode(button_sub_title, '-1');\r\n                button_data['data']  = 'SCENARIO_' + button_sub_scenario + '_' + variable_id + '_' + button_sub_title_base64;\r\n            }\r\n        }\r\n        data['message']['template']['actions'].push(button_data);\r\n    });\r\n    data = JSON.stringify(data);\r\n    changeDataBotMessage(data);\r\n}\r\n\r\n/**\r\n * get first file\r\n */\r\nfunction getDataFile() {\r\n    var original_url    = $('.file_group .file_url_input').val(),\r\n        preview_url     = $('.file_group .preview_url_input').val();\r\n    original_url        = $.trim(original_url);\r\n    preview_url         = $.trim(preview_url);\r\n    var file_type       = checkTypeFile(original_url);\r\n\r\n    if(file_type) {\r\n        var data = {\r\n            'message' : {\r\n                'type'                  : file_type,\r\n                'originalContentUrl'    : original_url,\r\n                'previewImageUrl'       : preview_url\r\n            }\r\n        };\r\n        data = JSON.stringify(data);\r\n        changeDataBotMessage(data);\r\n        //set title for button demo in message content box\r\n        setDataMediaDemo();\r\n        changeLabelMediaDemo(file_type);\r\n    } else {\r\n        console.log('File type not valid type');\r\n        //clear bot message content\r\n        changeDataBotMessage('');\r\n        setDataMediaDemo(true);\r\n    }\r\n}\r\n\r\n/**\r\n * get button data to json and fill to message box\r\n */\r\nfunction getDataGeneric() {\r\n    var template_button         = common_data['template_button'],\r\n        template_button_flip    = common_data['template_button_flip'];\r\n    var data = {\r\n        'message' : {\r\n            'type'      : 'template',\r\n            'altText'   : '',\r\n            'template'  : {\r\n                'type'      : 'carousel',\r\n                'columns'   : []\r\n            }\r\n        }\r\n    };\r\n    $('.generic_container .generic_box').each(function (index, element) {\r\n        var title     = $(this).find('input.title').val(),\r\n            text      = $(this).find('input.text').val(),\r\n            image_url = $(this).find('input.image_url').val();\r\n        var generic_data = {\r\n            'text'              : text\r\n        };\r\n        //set first title for altText\r\n        if(data['message']['altText'] == '') {\r\n            data['message']['altText'] = title;\r\n        }\r\n\r\n        if(image_url != void 0 && image_url != '') {\r\n            generic_data['thumbnailImageUrl'] = image_url;\r\n        }\r\n        if(title != void 0 && title != '') {\r\n            generic_data['title'] = title;\r\n        }\r\n        generic_data['actions'] = [];\r\n\r\n        //loop button in generic box\r\n        $(this).find('.generic_button_container .button_type_container').each(function (index2, element2) {\r\n            var button_title        = $(this).find('input.button_title').val(),\r\n                button_sub_type     = $(this).find('select.button_sub_type').val(),\r\n                button_sub_data     = $(this).find('input.button_sub_data').val(),\r\n                button_sub_scenario = $(this).find('select.button_sub_scenario').val();\r\n\r\n            var button_data = {\r\n                'type'      : template_button_flip[button_sub_type],\r\n                'label'     : button_title,\r\n            };\r\n\r\n            if(button_sub_type == template_button['uri']) {\r\n                button_data['uri']  = button_sub_data;\r\n            } else {\r\n                if(button_sub_type == template_button['message'] && button_sub_data != void 0 && button_sub_data != '') {\r\n                    button_data['text'] = button_sub_data;\r\n                }\r\n                if(button_sub_type == template_button['postback']) {\r\n                    button_data['data']  = 'SCENARIO_' + button_sub_scenario + '_' + button_title.replace(/[_]/g, '');\r\n                }\r\n            }\r\n            //push to buttons in carousel data\r\n            generic_data['actions'].push(button_data);\r\n        });\r\n        data['message']['template']['columns'].push(generic_data);\r\n    });\r\n    data = JSON.stringify(data);\r\n    changeDataBotMessage(data);\r\n}\r\n\r\n\r\n/**\r\n * get button data to json and fill to message box\r\n */\r\nfunction getDataConfirm() {\r\n    var confirm_group           = $('.confirm_group .confirm_container'),\r\n        confirm_text            = confirm_group.find('input.confirm_text').val(),\r\n        template_button         = common_data['template_button'],\r\n        template_button_flip    = common_data['template_button_flip'],\r\n        variable_id             = '';\r\n\r\n    //set variable if use select box\r\n    if(confirm_group.find('input.confirm_is_variable:checked').val()) {\r\n        variable_id             = confirm_group.find('select.confirm_variable').val();\r\n    }\r\n\r\n    var data = {\r\n        'variable' : variable_id,\r\n        'message' : {\r\n            'type'      : 'template',\r\n            'altText'   : confirm_text,\r\n            'template'  : {\r\n                'type'      : 'confirm',\r\n                'text'      : confirm_text,\r\n                'actions'   : []\r\n            }\r\n        }\r\n    };\r\n\r\n    $('.confirm_group .confirm_container .btn_box').each(function (index, element) {\r\n        var button_sub_title     = $(this).find('input.button_sub_title').val(),\r\n            button_sub_type      = $(this).find('select.button_sub_type').val(),\r\n            button_sub_data      = $(this).find('input.button_sub_data').val(),\r\n            button_sub_scenario  = $(this).find('select.button_sub_scenario').val();\r\n        var button_data = {\r\n            'type'  : template_button_flip[button_sub_type],\r\n            'label' : button_sub_title\r\n        };\r\n        if(button_sub_type == template_button['uri']) {\r\n            button_data['uri']  = button_sub_data;\r\n        } else {\r\n            if(button_sub_type == template_button['message'] && button_sub_data != void 0 && button_sub_data != '') {\r\n                button_data['text'] = button_sub_data;\r\n            }\r\n            if(button_sub_type == template_button['postback']) {\r\n                if(variable_id == void 0 || variable_id == '') {\r\n                    variable_id = '-1';\r\n                }\r\n                var button_sub_title_base64 = base64Encode(button_sub_title, '-1');\r\n                button_data['data']  = 'SCENARIO_' + button_sub_scenario + '_' + variable_id + '_' + button_sub_title_base64;\r\n            }\r\n        }\r\n        data['message']['template']['actions'].push(button_data);\r\n    });\r\n\r\n    data = JSON.stringify(data);\r\n    changeDataBotMessage(data);\r\n}\r\n\r\n/**\r\n * get location data to json and fill to message box\r\n */\r\nfunction getDataLocation() {\r\n    var location_group = $('.location_group'),\r\n        title          = location_group.find('input.title').val(),\r\n        address        = location_group.find('input.address').val(),\r\n        latitude       = location_group.find('input.latitude').val(),\r\n        longitude      = location_group.find('input.longitude').val(),\r\n        data    = {\r\n            'message' : {\r\n                'type'      : 'location',\r\n                'title'     : title,\r\n                'address'   : address,\r\n                'latitude'  : latitude,\r\n                'longitude' : longitude\r\n            }\r\n        };\r\n\r\n    data = JSON.stringify(data);\r\n    changeDataBotMessage(data);\r\n}\r\n\r\n/**\r\n * get sticker data to json and fill to message box\r\n */\r\nfunction getDataSticker() {\r\n    var location_group = $('.sticker_group'),\r\n        package_id     = location_group.find('input.package_id').val(),\r\n        sticker_id     = location_group.find('input.sticker_id').val(),\r\n        data           = {\r\n            'message' : {\r\n                'type'      : 'sticker',\r\n                'packageId' : package_id,\r\n                'stickerId' : sticker_id\r\n            }\r\n        };\r\n\r\n    data = JSON.stringify(data);\r\n    changeDataBotMessage(data);\r\n}\r\n\r\n/**\r\n * get imagemap data to json and fill to message box\r\n */\r\nfunction getDataImagemap() {\r\n    var imagemap_group          = $('.imagemap_group'),\r\n        template_button         = common_data['template_button'],\r\n        template_button_flip    = common_data['template_button_flip'],\r\n        imagemap_template_type  = imagemap_group.find('input.template_type').val(),\r\n        image_url               = imagemap_group.find('textarea.imagemap_url').val(),\r\n        alt_text                = imagemap_group.find('input.alt_text').val(),\r\n        data = {\r\n            'template_type' : imagemap_template_type,\r\n            'message' : {\r\n                'type'      : 'imagemap',\r\n                'baseUrl'   : image_url,\r\n                'altText'   : alt_text,\r\n                'baseSize'  : {\r\n                    'height'    : imagemap_base_size_h,\r\n                    'width'     : imagemap_base_size_w\r\n                },\r\n                'actions'   : []\r\n            }\r\n        };\r\n\r\n    imagemap_group.find('.imagemap_container .btn_box').each(function (index, element) {\r\n        var button_sub_type      = $(this).find('select.button_sub_type').val(),\r\n            button_sub_data      = $(this).find('input.button_sub_data').val();\r\n\r\n        var button_data = {\r\n            'type'  : template_button_flip[button_sub_type]\r\n        };\r\n        if(button_sub_type == template_button['uri']) {\r\n            button_data['linkUri']  = button_sub_data;\r\n\r\n        } else if(button_sub_type == template_button['message']) {\r\n            button_data['text'] = button_sub_data;\r\n        }\r\n        //area for image map\r\n        var imagemap_area_index = index+1;\r\n        button_data['area'] = getAreaImagemap(imagemap_template_type, imagemap_area_index);\r\n\r\n        data['message']['actions'].push(button_data);\r\n    });\r\n\r\n    data = JSON.stringify(data);\r\n    changeDataBotMessage(data);\r\n\r\n    function getAreaImagemap(template_type, area_index) {\r\n        var result = {\r\n            \"x\": 0,\r\n            \"y\": 0,\r\n            \"width\": 0,\r\n            \"height\": 0\r\n        };\r\n\r\n        if(template_type != void 0 && template_type > 0 && template_type <= 8) {\r\n            var w_half = Math.floor(imagemap_base_size_w / 2);\r\n            var h_half = Math.floor(imagemap_base_size_h / 2);\r\n            var w_third = Math.floor(imagemap_base_size_w / 3);\r\n            var h_third = Math.floor(imagemap_base_size_h / 3);\r\n            var w_four = Math.floor(imagemap_base_size_w / 4);\r\n            var h_four = Math.floor(imagemap_base_size_h / 4);\r\n\r\n            //imagemap_area_index is number from 1->6 (area 1->6)\r\n            template_type = parseInt(template_type);\r\n            area_index = parseInt(area_index);\r\n            switch (template_type) {\r\n                case 1:\r\n                    /** Image preview (1: A, 2: B, 3: C, 4: D, 5: E, 6: F)\r\n                     A\r\n                     */\r\n                    result['width'] = imagemap_base_size_w;\r\n                    result['height'] = imagemap_base_size_h;\r\n                    break;\r\n                case 2:\r\n                    /** Image preview (1: A, 2: B, 3: C, 4: D, 5: E, 6: F)\r\n                         |\r\n                     A   |   B\r\n                         |\r\n                     */\r\n                    result['width'] = w_half;\r\n                    result['height'] = imagemap_base_size_h;\r\n                    if (area_index == 2) {\r\n                        result['x'] = w_half;\r\n                    }\r\n                    break;\r\n                case 3:\r\n                    /** Image preview (1: A, 2: B, 3: C, 4: D, 5: E, 6: F)\r\n                        A\r\n                     -------\r\n                        B\r\n                     */\r\n                    result['width'] = imagemap_base_size_w;\r\n                    result['height'] = h_half;\r\n                    if (area_index == 2) {\r\n                        result['y'] = h_half;\r\n                    }\r\n                    break;\r\n                case 4:\r\n                    /** Image preview (1: A, 2: B, 3: C, 4: D, 5: E, 6: F)\r\n                     A           A\r\n                     -------------\r\n                     B           B\r\n                     -------------\r\n                     C           C\r\n                     */\r\n                    result['width'] = imagemap_base_size_w;\r\n                    result['height'] = h_third;\r\n                    if (area_index == 2) {\r\n                        result['y'] = h_half;\r\n\r\n                    } else if (area_index == 3) {\r\n                        result['y'] = h_third*2;\r\n                    }\r\n                    break;\r\n                case 5:\r\n                    /** Image preview (1: A, 2: B, 3: C, 4: D, 5: E, 6: F)\r\n                     A   |  B\r\n                     ----|----\r\n                     C   |  D\r\n                     */\r\n                    result['width'] = w_half;\r\n                    result['height'] = h_half;\r\n                    if (area_index == 2) {\r\n                        result['x'] = w_half;\r\n\r\n                    } else if (area_index == 3) {\r\n                        result['y'] = h_half;\r\n\r\n                    } else if (area_index == 4) {\r\n                        result['x'] = w_half;\r\n                        result['y'] = h_half;\r\n                    }\r\n                    break;\r\n                case 6:\r\n                    /** Image preview (1: A, 2: B, 3: C, 4: D, 5: E, 6: F)\r\n                        A\r\n                    ---------\r\n                     B  |  C\r\n                     */\r\n                    result['height'] = h_half;\r\n                    if (area_index == 1) {\r\n                        result['width'] = imagemap_base_size_w;\r\n\r\n                    } else if (area_index == 2) {\r\n                        result['width'] = w_half;\r\n                        result['y'] = h_half;\r\n\r\n                    } else if (area_index == 3) {\r\n                        result['width'] = w_half;\r\n                        result['x'] = w_half;\r\n                        result['y'] = h_half;\r\n                    }\r\n                    break;\r\n                case 7:\r\n                    /** Image preview (1: A, 2: B, 3: C, 4: D, 5: E, 6: F)\r\n                         A (W: 50%)\r\n                         A\r\n                     ---------\r\n                         B (W: 25%)\r\n                     ---------\r\n                         c (W: 25%)\r\n                     */\r\n                    result['width'] = imagemap_base_size_w;\r\n                    if (area_index == 1) {\r\n                        result['height'] = h_half;\r\n\r\n                    } else if (area_index == 2) {\r\n                        result['height'] = h_four;\r\n                        result['y'] = h_four*2;\r\n\r\n                    } else if (area_index == 3) {\r\n                        result['height'] = h_four;\r\n                        result['y'] = h_four*3;\r\n                    }\r\n                    break;\r\n                case 8:\r\n                    /** Image preview (1: A, 2: B, 3: C, 4: D, 5: E, 6: F)\r\n                     A   |  B  |  C\r\n                     ----|-----|----\r\n                     D   |  E  |  F\r\n                     */\r\n                    result['width'] = w_third;\r\n                    result['height'] = h_half;\r\n                    if (area_index == 2) {\r\n                        result['x'] = w_third;\r\n                    } else if (area_index == 3) {\r\n                        result['x'] = w_third*2;\r\n\r\n                    } else if (area_index == 4) {\r\n                        result['y'] = h_half;\r\n\r\n                    } else if (area_index == 5) {\r\n                        result['x'] = w_third;\r\n                        result['y'] = h_half;\r\n\r\n                    } else if (area_index == 6) {\r\n                        result['x'] = w_third*2;\r\n                        result['y'] = h_half;\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n}\r\n\r\n/**\r\n * get api data to json and fill to message box\r\n */\r\nfunction getDataApi() {\r\n    var api_val = apiElement(),\r\n        data    = {\r\n            'api' : api_val.val()\r\n        };\r\n    data = {'message' : data};\r\n    data = JSON.stringify(data);\r\n    changeDataBotMessage(data);\r\n}\r\n\r\n/**\r\n * get api data to json and fill to message box\r\n */\r\nfunction getDataScenarioConnect() {\r\n    var scenario_val = scenarioConnectElement(),\r\n        data         = {\r\n            'scenario' : scenario_val.val()\r\n        };\r\n    data = {'message' : data};\r\n    data = JSON.stringify(data);\r\n    changeDataBotMessage(data);\r\n}\r\n\r\n/**\r\n * get mail data to json and fill to message box\r\n */\r\nfunction getDataMail() {\r\n    var scenario_val = mailElement(),\r\n        data         = {\r\n            'mail' : scenario_val.val()\r\n        };\r\n    data = {'message' : data};\r\n    data = JSON.stringify(data);\r\n    changeDataBotMessage(data);\r\n}\r\n\r\n/**\r\n * get title from message_container_input for input User demo\r\n * @param is_clear\r\n */\r\nfunction setUserDataMediaDemo(is_clean) {\r\n    var user_message_box    = userMessageBoxElement();\r\n    if(is_clean != void 0 && is_clean) {\r\n        user_message_box.find('.user_media_content').val('');\r\n    } else {\r\n        var user_message_type = userMessageType(),\r\n            type = common_data['user_content_type'],\r\n            value;\r\n\r\n        if(user_message_type == type[type_api_variable_setting]) {\r\n            var element = apiVariableSettingElement(),\r\n                label_bot_smg  = $('.scenario_block_origin .bot_virtual_box .bot_api_variable_setting_view').data('label');\r\n            value = element.find(\"option[value='\" + element.val() + \"']\").text();\r\n            value = label_bot_smg + '[' + value + ']';\r\n        }\r\n        user_message_box.find('.user_media_content').val(value);\r\n    }\r\n}\r\n\r\n/**\r\n * get title from message_container_input for input Bot demo\r\n * @param is_clear\r\n */\r\nfunction setDataMediaDemo(is_clean) {\r\n    var bot_message_box = botMessageBoxElement();\r\n\r\n    if(is_clean != void 0 && is_clean) {\r\n        bot_message_box.find('.bot_media_content').val('');\r\n    } else {\r\n        var bot_message_type    = botMessageType(),\r\n            type                = common_data['bot_content_type'],\r\n            value;\r\n\r\n        if(bot_message_type == type[type_text]) {\r\n            var typeInput = botTextTypeInput();\r\n            value = typeInput.val();\r\n\r\n        } else if(bot_message_type == type[type_button]) {\r\n            value = $('.button_group .button_container input.button_title').val();\r\n\r\n        } else if(bot_message_type == type[type_carousel]) {\r\n            value = '';\r\n        } else if(bot_message_type == type[type_confirm]) {\r\n            value = $('.confirm_group input.confirm_text').val();\r\n        } else if(bot_message_type == type[type_file]) {\r\n            value = $('.file_group .file_url_input').val();\r\n        } else if(bot_message_type == type[type_location]) {\r\n            value = $('.location_group input.title').val();\r\n        } else if(bot_message_type == type[type_sticker]) {\r\n            value = '';\r\n        } else if(bot_message_type == type[type_imagemap]) {\r\n            value = $('.imagemap_group .imagemap_url').val();\r\n        } else if(bot_message_type == type[type_api] || bot_message_type == type[type_scenario_connect] || bot_message_type == type[type_mail]) {\r\n            var element;\r\n            switch (bot_message_type) {\r\n                case type[type_api]:\r\n                    element = apiElement(); break;\r\n                case type[type_scenario_connect]:\r\n                    element = scenarioConnectElement(); break;\r\n                case type[type_mail]:\r\n                    element = mailElement(); break;\r\n            }\r\n            value = element.find(\"option[value='\" + element.val() + \"']\").text()\r\n\r\n        }\r\n        bot_message_box.find('.bot_media_content').val(value);\r\n    }\r\n}\r\n\r\n/**\r\n * Actions when select type user\r\n */\r\nfunction checkContentUserInput(type_current) {\r\n    var type = common_data['user_content_type'],\r\n        user_message = userMessageBoxElement(),\r\n        user_media_demo = $('.scenario_block .user_scenario .user_media_demo'),\r\n        group_message = '';\r\n\r\n    $('.message_user_area .type_group').hide();\r\n\r\n    //case type\r\n    switch (type_current){\r\n        case type[type_text]:\r\n            group_message = $('.message_user_area .text_group');\r\n            group_message.find('.tagsinput input').first().focus();\r\n\r\n            user_message.find('.user_media_content ').addClass('hidden');\r\n            user_message.find('ul.tagit').removeClass('hidden');\r\n\r\n            //delete virtual bot message box\r\n            deleteBotVirtual();\r\n            break;\r\n        case type[type_library]:\r\n            group_message = $('.message_user_area .library_group');\r\n            //un-select all option\r\n            var lib_element = libraryListElement();\r\n            icheckAuto('uncheck', lib_element);\r\n\r\n            user_message.find('.user_media_content').addClass('hidden');\r\n            user_message.find('ul.tagit').removeClass('hidden');\r\n            cloneBotVirtual(null, type[type_library]);\r\n            break;\r\n        case type[type_api_variable_setting]:\r\n            //show button box\r\n            group_message = $('.message_user_area .api_variable_setting_group');\r\n\r\n            $('.message_user_area .api_variable_setting_group').show();\r\n            user_message.find('.user_media_content ').removeClass('hidden');\r\n            user_message.find('ul.tagit').addClass('hidden');\r\n            cloneBotVirtual(null, type[type_api_variable_setting]);\r\n\r\n            //select and get first option for message\r\n            var api = apiVariableSettingElement();\r\n            apiVariableSettingElement(api.find('option').first().val());\r\n\r\n            getDataUserFromInput(type_api_variable_setting);\r\n            break;\r\n    }\r\n    if(group_message) {\r\n        group_message.show();\r\n        //set un-checked input and select first option variable, nlp\r\n        icheckAuto('uncheck', group_message.find('input.use_variable'));\r\n        selectFirstOption(group_message.find('select.select_variable'));\r\n        icheckAuto('uncheck', group_message.find('input.use_nlp'));\r\n        selectFirstOption(group_message.find('select.select_nlp'));\r\n    }\r\n}\r\n\r\n/**\r\n * Actions when click to user message\r\n */\r\nfunction checkContentUserMessage(type_current) {\r\n    var type = common_data['user_content_type'],\r\n        user_message = userMessageBoxElement(),\r\n        user_media_demo = $('.scenario_block .user_scenario .user_media_demo'),\r\n        group_message = '';\r\n\r\n    $('.message_user_area .type_group').hide();\r\n\r\n    //case type\r\n    switch (type_current){\r\n        case type[type_text]:\r\n            group_message = $('.message_user_area .text_group');\r\n            group_message.find('.tagsinput input').first().focus();\r\n\r\n            user_message.find('.user_media_content ').addClass('hidden');\r\n            user_message.find('ul.tagit').removeClass('hidden');\r\n\r\n            //delete virtual bot message box\r\n            deleteBotVirtual();\r\n            break;\r\n        case type[type_library]:\r\n            group_message = $('.message_user_area .library_group');\r\n            //un-select all option\r\n            var lib_element = libraryListElement();\r\n            icheckAuto('uncheck', lib_element);\r\n\r\n            user_message.find('.user_media_content').addClass('hidden');\r\n            user_message.find('ul.tagit').removeClass('hidden');\r\n            cloneBotVirtual(null, type[type_library]);\r\n            break;\r\n        case type[type_api_variable_setting]:\r\n            //show button box\r\n            group_message = $('.message_user_area .api_variable_setting_group');\r\n            user_message.find('.user_media_content ').removeClass('hidden');\r\n            user_message.find('ul.tagit').addClass('hidden');\r\n            cloneBotVirtual(null, type[type_api_variable_setting]);\r\n            //select and get first option for message\r\n            var api = apiVariableSettingElement();\r\n            apiVariableSettingElement(api.find('option').first().val());\r\n\r\n            break;\r\n    }\r\n    if(group_message) {\r\n        group_message.show();\r\n        //set un-checked input and select first option variable, nlp\r\n        icheckAuto('uncheck', group_message.find('input.use_variable'));\r\n        selectFirstOption(group_message.find('select.select_variable'));\r\n        icheckAuto('uncheck', group_message.find('input.use_nlp'));\r\n        selectFirstOption(group_message.find('select.select_nlp'));\r\n    }\r\n}\r\n\r\n/**\r\n * Actions when select type bot\r\n */\r\nfunction checkContentBotInput(type_current) {\r\n    var type = common_data['bot_content_type'];\r\n    bot_change_element();\r\n    //clear data text\r\n    botTextTypeInput('');\r\n    //clear data button\r\n    button_element_select();\r\n    //clear data generic\r\n    $('.generic_group .generic_container .generic_box').remove();\r\n    $('.generic_indicators li').remove();\r\n    //clear data confirm\r\n    $('.confirm_group input.confirm_text').val('');\r\n    $('.confirm_group .btn_box').remove();\r\n    //clear data location\r\n    $('.location_group input').val('');\r\n    //clear validation class in select2 select\r\n    $('.message_bot_area .select2 .select2-selection').removeClass('validation-failed');\r\n\r\n    //sticker show hide element\r\n    var bot_message_input   = botMessageBoxElement();\r\n    //hide sticker preview demo and show media demo in message chat box\r\n    bot_message_input.find('.bot_preview_demo').addClass('hidden');\r\n    bot_message_input.find('.bot_preview_demo img.preview_img').attr('src', '/images/no_sticker_available.png');\r\n    bot_message_input.find('.bot_media_demo').removeClass('hidden');\r\n    //hide validate old message box\r\n    setStyleElm(bot_message_input.find('.bot_media_content'), {'border' : ''});\r\n\r\n    //add button demo in bot message\r\n    checkViewMediaDemo();\r\n    switch (type_current) {\r\n        case type[type_text]:\r\n            $('.message_bot_area .text_group').show();\r\n            changeLabelMediaDemo('');\r\n            break;\r\n        case type[type_button]:\r\n            //show button box\r\n            $('.message_bot_area .button_group').show();\r\n            //set un-checked input variable\r\n            icheckAuto('uncheck', $('.message_bot_area .button_group #btn_is_variable'));\r\n            //add first button box\r\n            addButtonBox();\r\n            changeLabelMediaDemo(type_button);\r\n            break;\r\n        case type[type_file]:\r\n            $('.message_bot_area .file_group').show();\r\n            $('.file_group').find('.file_url_input, .preview_url_input').val('');\r\n            changeLabelMediaDemo(type_file);\r\n            break;\r\n        case type[type_carousel]:\r\n            generic_element_select();\r\n            //add first generic box\r\n            createGenericBox();\r\n            changeLabelMediaDemo(type_carousel);\r\n            break;\r\n        case type[type_confirm]:\r\n            $('.message_bot_area .confirm_group').show();\r\n            //set un-checked input variable\r\n            icheckAuto('uncheck', $('.message_bot_area .confirm_group #confirm_is_variable'));\r\n            //add 2 button box\r\n            for(var i=0; i<=1; i++) {\r\n                addButtonBox();\r\n            }\r\n            changeLabelMediaDemo(type_confirm);\r\n            break;\r\n        case type[type_location]:\r\n            $('.message_bot_area .location_group').show();\r\n            changeLabelMediaDemo(type_location);\r\n            break;\r\n        case type[type_sticker]:\r\n            //show sticker select\r\n            sticker_element_select();\r\n            changeLabelMediaDemo('');\r\n            //show sticker message demo in message box\r\n            bot_message_input.find('.bot_preview_demo').removeClass('hidden');\r\n            bot_message_input.find('.bot_media_demo').addClass('hidden');\r\n            break;\r\n        case type[type_imagemap]:\r\n            imagemap_element_select();\r\n            changeLabelMediaDemo(type_imagemap);\r\n            break;\r\n        case type[type_api]:\r\n            $('.message_bot_area .api_group').show();\r\n            //select first option\r\n            var api_select = apiElement();\r\n            apiElement(api_select.find('option').first().val());\r\n            getDataFromInput(type_api);\r\n\r\n            changeLabelMediaDemo(type_api);\r\n            break;\r\n        case type[type_scenario_connect]:\r\n            $('.message_bot_area .scenario_connect_group').show();\r\n            //select first option\r\n            var scenario = scenarioConnectElement();\r\n            scenarioConnectElement(scenario.find('option').first().val());\r\n            //set first option for message\r\n            getDataFromInput(type_scenario_connect);\r\n\r\n            changeLabelMediaDemo(type_scenario_connect);\r\n            break;\r\n        case type[type_mail]:\r\n            $('.message_bot_area .mail_group').show();\r\n            //select first option\r\n            var mail_select = mailElement();\r\n            mailElement(mail_select.find('option').first().val());\r\n            //set first option for message\r\n            getDataFromInput(type_mail);\r\n\r\n            changeLabelMediaDemo(type_mail);\r\n            break;\r\n    }\r\n}\r\n\r\n/**\r\n * Actions when click to bot message\r\n */\r\nfunction checkContentBotMessage(type_current) {\r\n    var type = common_data['bot_content_type'];\r\n    bot_change_element();\r\n    switch (type_current){\r\n        case type[type_text]:\r\n            $('.message_bot_area .text_group').show();\r\n            break;\r\n        case type[type_button]:\r\n            //show button box\r\n            $('.message_bot_area .button_group').show();\r\n            break;\r\n        case type[type_file]:\r\n            $('.message_bot_area .file_group').show();\r\n            $('.file_group').find('.file_url_input, .preview_url_input').val('');\r\n            break;\r\n        case type[type_carousel]:\r\n            generic_element_select();\r\n            break;\r\n        case type[type_confirm]:\r\n            $('.message_bot_area .confirm_group').show();\r\n            break;\r\n        case type[type_location]:\r\n            $('.location_group input').val('');\r\n            $('.message_bot_area .location_group').show();\r\n            break;\r\n        case type[type_sticker]:\r\n            sticker_element_select();\r\n            break;\r\n        case type[type_imagemap]:\r\n            imagemap_element_select();\r\n            break;\r\n        case type[type_api]:\r\n            $('.message_bot_area .api_group').show();\r\n            //select first option\r\n            var api_select = apiElement();\r\n            apiElement(api_select.find('option').first().val());\r\n            break;\r\n        case type[type_scenario_connect]:\r\n            $('.message_bot_area .scenario_connect_group').show();\r\n            //select first option\r\n            var scenario = scenarioConnectElement();\r\n            scenarioConnectElement(scenario.find('option').first().val());\r\n            break;\r\n        case type[type_mail]:\r\n            $('.message_bot_area .mail_group').show();\r\n            //select first option\r\n            var mail = mailElement();\r\n            mailElement(mail.find('option').first().val());\r\n            break;\r\n    }\r\n}\r\n\r\n/**\r\n * action for elements when change bot message\r\n */\r\nfunction bot_change_element() {\r\n    $('.message_bot_area .type_group').hide();\r\n    //clear old error\r\n    $('.message_bot_area .type_group label.error').remove();\r\n    $('.message_bot_area .type_group input.validation-failed, .message_bot_area .type_group textarea.validation-failed').removeClass('validation-failed');\r\n    //clear common error\r\n    $('.message_bot_area .common_error').addClass('hidden').find('.error_container').html('');\r\n\r\n    $('.message_bot_area .add_group_box').hide();\r\n    $('.message_bot_area .footer_message_input .carousel_slide').hide();\r\n    $('.message_bot_area .footer_message_input .carousel_indicator_item').hide();\r\n    $('.message_bot_area .footer_message_input .add_item_common').hide();\r\n    //clear data input\r\n    botTextTypeInput('');\r\n    message_area_select(true);\r\n}\r\n\r\n/**\r\n * action for elements when select generic in bot message\r\n */\r\nfunction button_element_select() {\r\n    var button_box = $('.button_group .button_container');\r\n    button_box.find('input.button_title').val('');\r\n    button_box.find('input.button_text').val('');\r\n    button_box.find('input.image_url').val('');\r\n    button_box.find('.btn_box').remove();\r\n}\r\n\r\n/**\r\n * action for elements when select generic in bot message\r\n */\r\nfunction generic_element_select() {\r\n    $('.message_bot_area .footer_message_input .carousel_slide').show();\r\n    $('.message_bot_area .footer_message_input .carousel_indicator_item').show();\r\n    $('.message_bot_area .generic_group').show();\r\n    $('.message_bot_area .add_group_box').show();\r\n}\r\n\r\n/**\r\n * action for elements when select sticker in bot message\r\n */\r\nfunction sticker_element_select() {\r\n    var sticker_group = $('.message_bot_area .sticker_group');\r\n    sticker_group.show();\r\n    sticker_group.find('.sticker_preview img').attr('src', '');\r\n    sticker_group.find('input.package_id').val('');\r\n    sticker_group.find('input.sticker_id').val('');\r\n}\r\n\r\n/**\r\n * action for elements when select imagemap in bot message\r\n */\r\nfunction imagemap_element_select() {\r\n    var imagemap_group = $('.message_bot_area .imagemap_group');\r\n    imagemap_group.find('input.template_type, input.imagemap_url, input.alt_text').val('');\r\n    imagemap_group.find('.btn_box').remove();\r\n    //select first imagemap template\r\n    setFirstTemplateImagemap();\r\n    imagemap_group.show();\r\n}\r\n\r\n/**.\r\n * select bot message or user message\r\n * @param bot: undefined  or null: hide all\r\n */\r\nfunction message_area_select(bot) {\r\n    //hide message user area\r\n    var message_user_area = $('.message_container_input .message_user_area'),\r\n        message_bot_area  = $('.message_container_input .message_bot_area');\r\n    message_user_area.hide();\r\n    message_bot_area.hide();\r\n\r\n    if(bot != null) {\r\n        if(bot) {\r\n            message_bot_area.show();\r\n        } else {\r\n            message_user_area.show();\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * set data user mesage come back to input form\r\n */\r\nfunction setUserDataToForm() {\r\n    var user_message_val  = userMessageContent(),\r\n        user_message_type = userMessageType(),\r\n        user_message_variable = userMessageVariable(),\r\n        user_message_nlp  = userMessageNlp(),\r\n        type              = common_data['user_content_type'],\r\n        user_input_text   = userInputText(),\r\n        group_message     = '';\r\n\r\n    /*fill data from user message to text input in right slidebar*/\r\n    switch (user_message_type) {\r\n        case type[type_text]:\r\n            group_message = $('.message_user_area .text_group');\r\n            user_input_text.importTags(user_message_val);\r\n            break;\r\n        case type[type_library]:\r\n            group_message = $('.message_user_area .library_group');\r\n            //re-check item\r\n            $(user_message_val.split(',')).each(function (index, value) {\r\n                if(value) {\r\n                    var library_item = libraryListElement(value);\r\n                    icheckAuto('check', library_item);\r\n                }\r\n            });\r\n            break;\r\n        case type[type_api_variable_setting]:\r\n            group_message = $('.message_user_area .api_variable_setting_group');\r\n            if(user_message_val) {\r\n                apiVariableSettingElement(user_message_val);\r\n            }\r\n            break;\r\n    }\r\n\r\n    if(group_message) {\r\n        if(user_message_variable) {\r\n            //set checked input variable\r\n            icheck_change_event = false;\r\n            icheckAuto('check', group_message.find('input.use_variable'));\r\n            icheck_change_event = true;\r\n            //set value for select variable\r\n            group_message.find('select.select_variable').val(user_message_variable);\r\n        }\r\n        if(user_message_nlp) {\r\n            //set checked input nlp\r\n            icheck_change_event = false;\r\n            icheckAuto('check', group_message.find('input.use_nlp'));\r\n            icheck_change_event = true;\r\n            //set value for select nlp\r\n            group_message.find('select.select_nlp').val(user_message_nlp);\r\n        }\r\n    }\r\n\r\n    userMessageVariable(user_message_variable);\r\n    userMessageNlp(user_message_nlp);\r\n}\r\n\r\n/**\r\n * set data bot message come back to input form\r\n */\r\nfunction setBotDataToForm() {\r\n    var bot_message_input   = botMessageElement(),\r\n        bot_message_val     = botMessageContent(),\r\n        bot_message_type    = botMessageType(),\r\n        type                = common_data['bot_content_type'];\r\n\r\n    //fill data from bot message to text input in right slidebar\r\n    var jsonData = jsonConverse(bot_message_val);\r\n\r\n    //if text simple case\r\n    if(bot_message_type == type[type_text]) {\r\n        var text = '';\r\n        if(jsonData && jsonData['message']) {\r\n            jsonData = jsonData['message'];\r\n            if(jsonData['text']) {\r\n                text = jsonData['text'];\r\n            }\r\n        }\r\n        botTextTypeInput(text);\r\n    } else {\r\n        var template_button = common_data['template_button'],\r\n            file_type       = common_data['file_type'];\r\n\r\n        if(bot_message_type == type[type_button] || bot_message_type == type[type_confirm]) {\r\n            //remove old data\r\n            if(bot_message_type == type[type_button]) {\r\n                var button_group = $('.button_group');\r\n                var variable_checkbox = button_group.find('#btn_is_variable'),\r\n                    variable_select = button_group.find('select.button_variable');\r\n\r\n                //clear data button\r\n                button_element_select();\r\n            } else if(bot_message_type == type[type_confirm]) {\r\n                var confirm_group = $('.confirm_group');\r\n                var variable_checkbox = confirm_group.find('#confirm_is_variable'),\r\n                    variable_select = confirm_group.find('select.confirm_variable');\r\n\r\n                //clear data confirm\r\n                $('.confirm_group input.confirm_text').val('');\r\n                $('.confirm_group .btn_box').remove();\r\n            }\r\n\r\n            var button_number = 0;\r\n\r\n            if(jsonData != void 0 && jsonData) {\r\n                //disable 'ifChanged' event of iCheck in this process, it call getDataButton() function make error data\r\n                icheck_change_event = false;\r\n                //set un-checked input is variable\r\n                icheckAuto('uncheck', variable_checkbox);\r\n                //checked first option variable\r\n                variable_select.val(variable_select.find('option').first().val());\r\n                //set value for variable\r\n                if(jsonData['variable'] != void 0 && jsonData['variable'] != '') {\r\n                    //set checked input is variable\r\n                    icheckAuto('check', variable_checkbox);\r\n                    //set value for select variable\r\n                    variable_select.val(jsonData['variable']);\r\n                }\r\n\r\n                if(jsonData['message'] && jsonData['message']['template']) {\r\n                    jsonData            = jsonData['message'];\r\n                    var data_template   = jsonData['template'],\r\n                        button_box      = null;\r\n\r\n                    if(bot_message_type == type[type_button]) {\r\n                        button_box      = $('.button_group .button_container');\r\n                        button_box.find('input.button_title').val(data_template['title']);\r\n                        button_box.find('input.button_text').val(data_template['text']);\r\n                        button_box.find('input.image_url').val(data_template['thumbnailImageUrl']);\r\n\r\n                    } else if(bot_message_type == type[type_confirm]) {\r\n                        button_box      = $('.confirm_group .confirm_container');\r\n                        button_box.find('input.confirm_text').val(data_template['text']);\r\n                    }\r\n\r\n                    //create button detail\r\n                    var buttons = data_template['actions'];\r\n                    button_number = buttons.length;\r\n                    for (var i=0; i<buttons.length; i++) {\r\n                        var clone       = $('.scenario_block_origin .btn_box').clone(),\r\n                            button_data = buttons[i],\r\n                            button_sub_data     = clone.find('input.button_sub_data'),\r\n                            placeholder_text    = button_sub_data.data('label_text');\r\n\r\n                        //remove delete button box if is confirm type\r\n                        if(bot_message_type == type[type_confirm]) {\r\n                            clone.find('.button_delete_box').remove();\r\n                        }\r\n                        clone.find('input.button_sub_title').val(button_data['label']);\r\n                        clone.find('select.button_sub_type').val(template_button[button_data['type']]);\r\n\r\n                        button_sub_data.removeClass('validate-require validate-url validate-white-list maximum-length-1000 maximum-length-300');\r\n                        button_sub_data.val(button_data['text']);\r\n\r\n                        if(button_data['type'] == 'postback') {\r\n                            var custom_data = button_data['data'].split('_');\r\n                            custom_data = custom_data[1];\r\n                            clone.find('select.button_sub_scenario').val(custom_data);\r\n                            clone.find('.button_scenario_box').show();\r\n                            button_sub_data.addClass('maximum-length-300 hidden').attr('placeholder', 'placeholder_text');\r\n\r\n                        } else if(button_data['type'] == 'uri') {\r\n                            placeholder_text = button_sub_data.data('label_url');\r\n                            button_sub_data.addClass('validate-require validate-url validate-white-list maximum-length-1000').removeClass('hidden');\r\n                            button_sub_data.val(button_data['uri']);\r\n\r\n                        } else if(button_data['type'] == 'message') {\r\n                            button_sub_data.addClass('validate-require maximum-length-300').removeClass('hidden');\r\n                        }\r\n                        button_sub_data.attr('placeholder', placeholder_text);\r\n\r\n                        if(button_box != null) {\r\n                            button_box.append(clone);\r\n                        }\r\n                        checkButtonBox();\r\n                    }\r\n                }\r\n            }\r\n            //add button box for button and confirm type\r\n            if(button_number <= 0) {\r\n                var button_init = 1;\r\n                if(bot_message_type == type[type_confirm]) {\r\n                    button_init = max_confirm_button;\r\n                }\r\n                for(var i=1; i<=button_init; i++) {\r\n                    addButtonBox();\r\n                }\r\n            }\r\n            //re-set default value\r\n            icheck_change_event = true;\r\n\r\n        } else if(bot_message_type == type[type_carousel]) {\r\n            //remove all generic before action\r\n            $('.generic_group .generic_container .generic_box').remove();\r\n            $('.generic_indicators li').remove();\r\n\r\n            if(jsonData && jsonData['message']) {\r\n                jsonData = jsonData['message']['template']['columns'];\r\n                for (var i=0; i<jsonData.length; i++) {\r\n                    var clone           = $('.scenario_block_origin .generic_box').clone(),\r\n                        generic_data    = jsonData[i];\r\n\r\n                    clone.find('input.title').val(generic_data['title']);\r\n                    clone.find('input.text').val(generic_data['text']);\r\n                    clone.find('input.image_url').val(generic_data['thumbnailImageUrl']);\r\n                    //add a button for new Generic\r\n                    //------Carousel process\r\n                    //add class active for first item to show Carousel\r\n                    for (var j=0; j<generic_data['actions'].length; j++) {\r\n                        var button_data     = generic_data['actions'][j],\r\n                            button_clone    = $('.scenario_block_origin .generic_button_template .button_type_container').clone(),\r\n                            button_sub_data = button_clone.find('input.button_sub_data'),\r\n                            placeholder_text = button_sub_data.data('label_text');\r\n\r\n                        button_clone.find('select.button_sub_type').val(template_button[button_data['type']]);\r\n                        button_clone.find('input.button_title').val(button_data['label']);\r\n\r\n                        button_sub_data.removeClass('validate-require validate-url validate-white-list maximum-length-1000 maximum-length-300');\r\n                        button_sub_data.val(button_data['text']);\r\n\r\n                        if(button_data['type'] == 'postback') {\r\n                            var custom_data = button_data['data'].split('_');\r\n                            custom_data = custom_data[1];\r\n                            button_clone.find('select.button_sub_scenario').val(custom_data);\r\n                            button_clone.find('.button_scenario_box').show();\r\n                            button_sub_data.addClass('maximum-length-300 hidden');\r\n                        } else if(button_data['type'] == 'uri') {\r\n                            placeholder_text = button_sub_data.data('label_url');\r\n                            button_sub_data.addClass('validate-require validate-url validate-white-list maximum-length-1000');\r\n                            button_sub_data.val(button_data['uri']);\r\n                        } else if(button_data['type'] == 'message') {\r\n                            button_sub_data.addClass('validate-require maximum-length-300');\r\n                        }\r\n                        button_sub_data.attr('placeholder', placeholder_text);\r\n\r\n                        clone.find('.generic_button_container').append(button_clone);\r\n                    }\r\n                    $('.generic_container').append(clone);\r\n\r\n                    //------Carousel process\r\n                    //set active for first item\r\n                    addCarouselIndicator('generic_indicators', true);\r\n                    checkCarouselSlide();\r\n\r\n                    //check to show, hide button delete box\r\n                    checkGenericBox();\r\n                    checkGenericButtonBox();\r\n                }\r\n            } else {\r\n                //add first generic box\r\n                createGenericBox();\r\n            }\r\n        } else if(bot_message_type == type[type_file]) {\r\n            if(jsonData && jsonData['message']) {\r\n                jsonData            = jsonData['message'];\r\n                var original_url    = jsonData['originalContentUrl'] ? jsonData['originalContentUrl'] : '',\r\n                    preview_url     = jsonData['previewImageUrl'] ? jsonData['previewImageUrl'] : '';\r\n                //set file url for file input\r\n                $('.file_group .file_url_input').val(original_url);\r\n                $('.file_group .preview_url_input').val(preview_url);\r\n            }\r\n        } else if(bot_message_type == type[type_location]) {\r\n            if(jsonData && jsonData['message']) {\r\n                jsonData            = jsonData['message'];\r\n                var title           = jsonData['title'] ? jsonData['title'] : '',\r\n                    address         = jsonData['address'] ? jsonData['address'] : '',\r\n                    latitude        = jsonData['latitude'] ? jsonData['latitude'] : '',\r\n                    longitude       = jsonData['longitude'] ? jsonData['longitude'] : '',\r\n                    location_group  = $('.location_group');\r\n\r\n                location_group.find('input.title').val(title);\r\n                location_group.find('input.address').val(address);\r\n                location_group.find('input.latitude').val(latitude);\r\n                location_group.find('input.longitude').val(longitude);\r\n            }\r\n        } else if(bot_message_type == type[type_sticker]) {\r\n            if(jsonData && jsonData['message']) {\r\n                jsonData            = jsonData['message'];\r\n                var package_id      = jsonData['packageId'] ? jsonData['packageId'] : '',\r\n                    sticker_id      = jsonData['stickerId'] ? jsonData['stickerId'] : '',\r\n                    sticker_group   = $('.sticker_group');\r\n\r\n                sticker_group.find('input.package_id').val(package_id);\r\n                sticker_group.find('input.sticker_id').val(sticker_id);\r\n\r\n                //show to preview in input area\r\n                var sticker_path    = '/images/line_sticker/package_' + package_id + '/' + sticker_id + '.png';\r\n                showStickerInputArea(sticker_path);\r\n            }\r\n        } else if(bot_message_type == type[type_imagemap]) {\r\n            var button_number = 0;\r\n            if(jsonData != void 0 && jsonData && jsonData['message']) {\r\n                var imagemap_group = $('.imagemap_group .imagemap_container');\r\n                imagemap_group.find('input.template_type').val(jsonData['template_type']);\r\n                imagemap_group.find('.imagemap_template_selected').attr('src', imagemap_template_path + 'type_' + jsonData['template_type'] + '_guide_s.png');\r\n\r\n                jsonData = jsonData['message'];\r\n                var buttons = jsonData['actions'];\r\n\r\n                imagemap_group.find('.imagemap_url').val(jsonData['baseUrl']);\r\n                imagemap_group.find('input.alt_text').val(jsonData['altText']);\r\n                //create button detail\r\n                button_number = buttons.length;\r\n                if(button_number) {\r\n                    //remove old button\r\n                    imagemap_group.find('.btn_box').remove();\r\n                    for (var i=0; i<buttons.length; i++) {\r\n                        var clone       = $('.scenario_block_origin .btn_box').clone(),\r\n                            button_data = buttons[i],\r\n                            button_sub_data  = clone.find('input.button_sub_data'),\r\n                            placeholder_text = button_sub_data.data('label_text');\r\n\r\n                        clone.prepend('<label class=\"col-md-12\">' + imagemap_btn_label[i] + '</label>');\r\n                        clone.find('.button_delete_box, .button_title_box').remove();\r\n                        //remove postback option\r\n                        clone.find('select.button_sub_type option[value=\"' + template_button['postback'] + '\"]').remove();\r\n\r\n                        clone.find('select.button_sub_type').val(template_button[button_data['type']]);\r\n                        button_sub_data.removeClass('validate-require validate-url validate-white-list maximum-length-1000 maximum-length-300');\r\n\r\n                        if(button_data['type'] == 'uri') {\r\n                            button_sub_data.val(button_data['linkUri']);\r\n                            placeholder_text = button_sub_data.data('label_url');\r\n                            button_sub_data.addClass('validate-require validate-url validate-white-list maximum-length-1000').removeClass('hidden');\r\n\r\n                        } else if(button_data['type'] == 'message') {\r\n                            button_sub_data.val(button_data['text']);\r\n                            button_sub_data.addClass('validate-require maximum-length-400').removeClass('hidden');\r\n                        }\r\n                        button_sub_data.attr('placeholder', placeholder_text);\r\n\r\n                        if(imagemap_group != null) {\r\n                            imagemap_group.append(clone);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            //select first template if not exist any button\r\n            if(button_number <= 0) {\r\n                setFirstTemplateImagemap();\r\n            }\r\n        }  else if(bot_message_type == type[type_api]) {\r\n            if(jsonData && jsonData['message'] && jsonData['message']['api'] && jsonData['message'] != '') {\r\n                var api = jsonData['message']['api'];\r\n                //select option\r\n                apiElement(api);\r\n            } else {\r\n                //re get api if exist any api item\r\n                getDataFromInput(type_api);\r\n            }\r\n        } else if(bot_message_type == type[type_scenario_connect] && jsonData['message'] != '') {\r\n            if(jsonData && jsonData['message']  && jsonData['message']['scenario']) {\r\n                var scenario = jsonData['message']['scenario'];\r\n                //select option\r\n                scenarioConnectElement(scenario);\r\n            } else {\r\n                //re get scenario if exist any api item\r\n                getDataFromInput(type_scenario_connect);\r\n            }\r\n        } else if(bot_message_type == type[type_mail] && jsonData['message'] != '') {\r\n            if(jsonData && jsonData['message']) {\r\n                var mail = jsonData['message']['mail'];\r\n                //select option\r\n                mailElement(mail);\r\n            } else {\r\n                //re get mail if exist any api item\r\n                getDataFromInput(type_mail);\r\n            }\r\n        }\r\n    }\r\n\r\n    //check error input in message box and push notice\r\n    checkErrorBoxMessage();\r\n}\r\n\r\n/**\r\n * check if string can converse to json\r\n * @param value\r\n * @returns {boolean}\r\n */\r\nfunction jsonConverse(value){\r\n    try{\r\n        var result = JSON.parse(value);\r\n        return result;\r\n    } catch (error){\r\n        return false;\r\n    }\r\n}\r\n\r\n/**\r\n * return file type from url\r\n * @param url\r\n * @returns {boolean}\r\n */\r\nfunction checkTypeFile(url) {\r\n    var extension       = url.substring(url.lastIndexOf('.') + 1).toLowerCase(),\r\n        image_file_type = ['jpg', 'jpeg', 'png', 'bmp', 'gif', 'bmp'],\r\n        video_file_type = ['3gp', '3g2', '3gp', 'asf', 'dat', 'divx', 'dv', 'f4v', 'm2ts', 'm4v', 'mkv', 'mod', 'mov', 'mp4', 'mpe', 'mpeg', 'mpeg4', 'mpg', 'mts', 'nsv', 'ogm', 'ogv', 'qt', 'tod', 'ts', 'vob', 'wmv'],\r\n        other_file_type = ['pdf'],\r\n        result          = false;\r\n\r\n    if (image_file_type.includes(extension)) {\r\n        result = 'image';\r\n    } else if(video_file_type.includes(extension)) {\r\n        result = 'video';\r\n    } else if(other_file_type.includes(extension)) {\r\n        result = 'file';\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction changeLabelMediaDemo(value) {\r\n    var content             = '',\r\n        bot_message_input   = botMessageBoxElement(),\r\n        bot_type            = bot_message_input.find('.bot_media_demo .bot_type');\r\n    if(value != void 0 && value != '') {\r\n        content = bot_type.data(value.toLowerCase());\r\n        // console.log('key:' + value);\r\n        // console.log('-> ' + content);\r\n        bot_type.removeClass('hidden');\r\n    } else {\r\n        bot_type.addClass('hidden');\r\n    }\r\n    bot_type.html(content);\r\n}\r\n\r\n//check active slide to hide, show arrow\r\nfunction checkCarouselSlide() {\r\n    var arrow_left  = $(\".footer_message_input .carousel_slide [data-slide='prev']\"),\r\n        arrow_right = $(\".footer_message_input .carousel_slide [data-slide='next']\");\r\n\r\n    if ($('.generic_container .generic_box').length > 1) {\r\n        if($('.generic_container .generic_box:last-child').hasClass('active')) {\r\n            arrow_right.hide();\r\n            arrow_left.show();\r\n        } else if($('.generic_container .generic_box:first-child').hasClass('active')) {\r\n            arrow_right.show();\r\n            arrow_left.hide();\r\n        } else {\r\n            arrow_right.show();\r\n            arrow_left.show();\r\n        }\r\n    } else {\r\n        arrow_right.hide();\r\n        arrow_left.hide();\r\n    }\r\n    //re-active Carousel indicator (Because move indicator to outsite Carousel div)\r\n    var indexActive = $('.generic_container .generic_box.active').index();\r\n    $('.footer_message_input .generic_indicators li').removeClass('active');\r\n    $('.footer_message_input .generic_indicators li').eq(indexActive).addClass('active');\r\n}\r\n\r\n/**\r\n * re-set hieght for right sldiebar\r\n */\r\nfunction setHeightSlidebar() {\r\n    var fixedsidebar            = $('.fixedsidebar').innerHeight(),\r\n        space                   = 208,\r\n        common_error_box        = $('.message_bot_area .common_error'),\r\n        group_box               = $('.message_bot_area .add_group_box'),\r\n        group_box_header        = 0;\r\n    if(group_box.css('display') != 'none') {\r\n        group_box_header += group_box.innerHeight() + parseInt(group_box.css('margin-bottom'));\r\n    }\r\n    group_box_header += common_error_box.innerHeight() + parseInt(common_error_box.css('margin-bottom'));\r\n\r\n    var height_box = fixedsidebar - space - group_box_header;\r\n    $('.fixedsidebar .message_bot_area .slimScrollDiv').css('height', height_box + 'px');\r\n    $('.message_bot_area .fixedsidebar-content').css('height', height_box + 'px');\r\n}\r\n\r\n/**\r\n * click to per messages to fill data and validate\r\n */\r\nfunction validateMessages() {\r\n    var msg_box_active = $('.scenario_block .message_box.active');\r\n    //re-fill data of current bot message for validate\r\n    setBotDataToForm();\r\n    $('.scenario_block .message_box.bot_scenario').each(function (i, e) {\r\n        $(this).click();\r\n    });\r\n    //re-active to active\r\n    if(msg_box_active.length) {\r\n        msg_box_active.click();\r\n    }\r\n}\r\n\r\n/**\r\n * check Error and set border color for Box Message\r\n */\r\nfunction checkErrorBoxMessage() {\r\n    var result = true;\r\n    var form_box            = '',\r\n        bot_message_type    = botMessageType(),\r\n        type                = common_data['bot_content_type'];\r\n    switch (bot_message_type) {\r\n        case type[type_text]:\r\n            form_box = $('.message_bot_area .text_group');\r\n            break;\r\n        case type[type_button]:\r\n            form_box = $('.message_bot_area .button_group');\r\n            break;\r\n        case type[type_carousel]:\r\n            form_box = $('.message_bot_area .generic_group');\r\n            break;\r\n        case type[type_file]:\r\n            form_box = $('.message_bot_area .file_group');\r\n            break;\r\n        case type[type_confirm]:\r\n            form_box = $('.message_bot_area .confirm_group');\r\n            break;\r\n        case type[type_location]:\r\n            form_box = $('.message_bot_area .location_group');\r\n            break;\r\n        case type[type_sticker]:\r\n            form_box = $('.message_bot_area .sticker_group');\r\n            break;\r\n        case type[type_imagemap]:\r\n            form_box = $('.message_bot_area .imagemap_group');\r\n            break;\r\n        case type[type_api]:\r\n            form_box = $('.message_bot_area .api_group');\r\n            break;\r\n        case type[type_scenario_connect]:\r\n            form_box = $('.message_bot_area .scenario_connect_group');\r\n            break;\r\n        case type[type_mail]:\r\n            form_box = $('.message_bot_area .mail_group');\r\n            break;\r\n    }\r\n\r\n    var form_style        = {'border' : ''},\r\n        bot_box           = botMessageBoxElement(),\r\n        bot_media_content = bot_box.find('.bot_media_content'),\r\n        validate          = true;\r\n\r\n    if(form_box != void 0 && form_box != '' && form_box.length) {\r\n        validate = validation_scenario('line', form_box, bot_message_type);\r\n        //if not demo bot input (bot_media_content) then get input messages_bot_content (only text type)\r\n        if(!bot_media_content.length) {\r\n            bot_media_content = bot_box.find('.messages_bot_content');\r\n        }\r\n    }\r\n    //validate button number of carousel\r\n    var validate_carousel = validateCarouselButton();\r\n\r\n    if(!validate || !validate_carousel) {\r\n        result = false;\r\n        form_style        = {'border' : '1px solid #ff5f5f'};\r\n    }\r\n    setStyleElm(bot_media_content, form_style);\r\n\r\n    return result;\r\n}\r\n\r\n/**\r\n * Validate button number must equal in per carousels\r\n * @returns {boolean}\r\n */\r\nfunction validateCarouselButton() {\r\n    var bot_message_type    = botMessageType(),\r\n        type                = common_data['bot_content_type'];\r\n\r\n    //clear common error\r\n    $('.message_bot_area .common_error').addClass('hidden').find('.error_container').html('');\r\n\r\n    if(bot_message_type == type[type_carousel]) {\r\n        var bot_message_val = botMessageContent(),\r\n        jsonData            = jsonConverse(bot_message_val);\r\n\r\n        if(jsonData && jsonData['message']) {\r\n            jsonData = jsonData['message']['template']['columns'];\r\n            var count = null;\r\n            for (var i=0; i<jsonData.length; i++) {\r\n                var carousel_item = jsonData[i];\r\n                if(carousel_item['actions'] != void 0 && carousel_item['actions'] != '') {\r\n                    var count_action = carousel_item['actions'].length;\r\n                    if(count == null) {\r\n                        //set first button number to check in next carousel\r\n                        count = count_action;\r\n                    } else if (count != count_action) {\r\n                        var validation_msg_list = common_data['validation_msg_list'];\r\n                        if(validation_msg_list != void 0 && validation_msg_list['validate_carousel_buton_number'] != void 0) {\r\n                            var notice = '<label class=\"error\">' + validation_msg_list['validate_carousel_buton_number'] + '</label>';\r\n                            $('.message_bot_area .common_error').removeClass('hidden').find('.error_container').append(notice);\r\n                        }\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return true;\r\n}\r\n\r\n/**\r\n * set style for element\r\n */\r\nfunction setStyleElm(elm, style) {\r\n    if(elm != void 0 && elm != '' && elm.length && style != void 0 && style != '') {\r\n        elm.css(style);\r\n    }\r\n}\r\n\r\n/**\r\n *\r\n * @param img_path\r\n * @returns {boolean}\r\n */\r\nfunction imageExist(img_path)\r\n{\r\n    var http = new XMLHttpRequest();\r\n    http.open('HEAD', img_path, false);\r\n    http.send();\r\n    return http.status != 404;\r\n}\r\n\r\n/**\r\n * set select first option for select input\r\n * @param elm\r\n */\r\nfunction selectFirstOption(elm) {\r\n    elm.val(elm.find('option').first().val());\r\n}\r\n\r\n/**\r\n * select first teplate for imagemap type\r\n */\r\nfunction setFirstTemplateImagemap() {\r\n    var modal_imagemap_template = $('#line_imagemap_template_modal');\r\n    modal_imagemap_template.find('.imagemap_template_content .imagemap_template_box').first().click();\r\n    modal_imagemap_template.find('.btn-modal-select').click();\r\n}\r\n","/**\r\n * Created by nguyen.khac.tung on 4/19/2017.\r\n */\r\nvar error_class   = 'validation-failed',\r\n    success_class = 'validation-pass',\r\n    bot_content_type = null;\r\n\r\nfunction validation_scenario (service_name, form, bot_message_type) {\r\n    var validation_result   = true,\r\n        validation_msg_list = common_data['validation_msg_list'];\r\n    bot_content_type    = common_data['bot_content_type'];\r\n\r\n    var validate_types = {\r\n        validate_require    : \"validate-require\",\r\n        validate_url        : \"validate-url\",\r\n        validate_url_secure : \"validate-url-secure\",\r\n        validate_max        : \"validate-max\",\r\n        validate_min        : \"validate-min\",\r\n        validate_phone      : \"validate-phone\",\r\n        validate_white_list : \"validate-white-list\",\r\n        validate_number     : \"validate-number\"\r\n    };\r\n    //converse to array\r\n    var validate_value = Object.keys(validate_types).map(function(key) {\r\n        return validate_types[key];\r\n    });\r\n\r\n    clearCrouselError();\r\n\r\n    //check one checkbox is checked then not check other checkbox same name\r\n    var checkbox_name_list = {};\r\n\r\n    $(form.find('input:not(.hidden), textarea:not(.hidden), select:not(.hidden)')).each(function (index, elm) {\r\n        var elm_class = $(elm).attr('class');\r\n\r\n        if(!isEmpty(elm_class)) {\r\n            //clear old validate class\r\n            $(elm).removeClass(error_class);\r\n            $(elm).removeClass(success_class);\r\n            //if is select and using select2\r\n            if(isSelect2(elm)) {\r\n                $(elm).next('.select2').find('.select2-selection').removeClass(error_class).removeClass(success_class);\r\n            }\r\n\r\n            check(elm);\r\n        }\r\n    });\r\n    return validation_result;\r\n\r\n    function check(elm) {\r\n        var result_check    = true;\r\n        var elm_class       = $(elm).attr('class');\r\n        var elm_class_arr   = $(elm).attr('class').split(' ');\r\n        var value           = '';\r\n\r\n\r\n        if($(elm).attr('type') == 'checkbox' || $(elm).attr('type') == 'radio') {\r\n            if(!isEmpty($(elm).attr('name'))) {\r\n                var input_name = $(elm).attr('name');\r\n\r\n                //not check if any checkbox is checked\r\n                if(!isEmpty(checkbox_name_list[input_name]) && checkbox_name_list[input_name]) {\r\n                    return result_check;\r\n                }\r\n                //add input name to checkbox_name_list\r\n                if(isEmpty(checkbox_name_list[input_name])) {\r\n                    checkbox_name_list[input_name] = 0;\r\n                }\r\n                var input_list  = $(elm).parents('.type_group').find('input[name=\"' + input_name + '\"]:checked');\r\n                value           = $.map(input_list, function(c){return c.value;});\r\n\r\n                //set flg 1 for input name. Not check after checkbox checked\r\n                if(!isEmpty(value)) {\r\n                    checkbox_name_list[input_name] = 1;\r\n                }\r\n            } else {\r\n                value       = $(elm)[0].checked;\r\n            }\r\n        } else {\r\n            value           = $(elm).val();\r\n        }\r\n\r\n        //each class check if is validate class and call to check process\r\n        $(elm_class_arr).each(function (i, class_name) {\r\n            var error_code      = '';\r\n            var error_param_msg = {};\r\n            if(result_check == true && validate_value.indexOf(class_name) != -1) {\r\n                if(class_name == validate_types.validate_require && isEmpty(value)) {\r\n                    result_check = !(elm_class_arr.indexOf(validate_types.validate_require) != -1);\r\n\r\n                } else if(class_name != validate_types.validate_require && !isEmpty(value)) {\r\n                    switch (class_name) {\r\n                        //'Please enter a valid URL. Protocol is required (http://, https:// or ftp://)'\r\n                        case validate_types.validate_url :\r\n                            var value_replace = value.replace(/[{}]/g, '');\r\n                            result_check = /^(https?|ftp):\\/\\/(((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:)*@)?(((\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5]))|((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.?)(:\\d*)?)(\\/((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)+(\\/(([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)*)*)?)?(\\?((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|[\\uE000-\\uF8FF]|\\/|\\?)*)?(\\#((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|\\/|\\?)*)?$/i.test(value_replace);\r\n                            break;\r\n                        //'Please enter a valid URL. Protocol is required (http://, https:// or ftp://)'\r\n                        case validate_types.validate_url_secure :\r\n                            var value_replace = value.replace(/[{}]/g, '');\r\n                            result_check = /^(https):\\/\\/(((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:)*@)?(((\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5]))|((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.?)(:\\d*)?)(\\/((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)+(\\/(([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)*)*)?)?(\\?((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|[\\uE000-\\uF8FF]|\\/|\\?)*)?(\\#((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|\\/|\\?)*)?$/i.test(value_replace);\r\n                            break;\r\n                        //'Please enter a valid phone number. For example (123) 456-7890 or 123-456-7890.'\r\n                        //Origin backup: /^((\\d[-. ]?)?((\\(\\d{3}\\))|\\d{3}))?[-. ]?\\d{3}[-. ]?\\d{4}$/.test(value);\r\n                        case validate_types.validate_phone : result_check = /^\\+?((\\d{1,3}[-. ]?)?((\\(\\d{1,3}\\))|\\d{1,3}))?[-. ]?\\d{1,3}[-. ]?\\d{1,4}$/.test(value);\r\n                            break;\r\n                        //'Text length does not satisfy specified text range.'\r\n                        case validate_types.validate_max :\r\n                            var hasMax = /maximum-length-+[0-9]*/.test(elm_class);\r\n                            if (hasMax) {\r\n                                var reMax       = elm_class.match(/maximum-length-+[0-9]*/).toString(),\r\n                                    length      = reMax.split('-')[2];\r\n                                if(value.length > length) {\r\n                                    result_check = false;\r\n                                    error_param_msg['max'] = length;\r\n                                }\r\n                            }\r\n                            break;\r\n                        case validate_types.validate_min :\r\n                            var hasMin = /minimum-length-+[0-9]*/.test(elm_class);\r\n                            if (hasMin) {\r\n                                var reMin       = elm_class.match(/minimum-length-+[0-9]*/).toString(),\r\n                                    length      = reMin.split('-')[2];\r\n                                if(value.length < length) {\r\n                                    result_check = false;\r\n                                    error_param_msg['min'] = length;\r\n                                }\r\n                            }\r\n                            break;\r\n                        case validate_types.validate_white_list :\r\n                            var white_list_domain   = common_data['white_list_domain'];\r\n\r\n                            if(white_list_domain != void 0 && white_list_domain.length) {\r\n                                var result_input    = false;\r\n                                $(white_list_domain).each(function (i, domain) {\r\n                                    if(domain != '' && domain != void 0 && domain != null) {\r\n                                        var reg                = /[a-z0-9]+\\.*[a-z0-9]+\\.[a-z]+/,\r\n                                            white_domain_clear = domain.match(reg),\r\n                                            value_clear        = value.match(reg);\r\n                                        if(value_clear.toString() == white_domain_clear.toString()) {\r\n                                            result_input = true;\r\n                                        }\r\n                                    }\r\n                                });\r\n                                if(!result_input) {\r\n                                    result_check = false;\r\n                                }\r\n                            }\r\n                            break;\r\n                        case validate_types.validate_number : result_check = !isNaN(value) && /^\\s*-?\\d*(\\.\\d*)?\\s*$/.test(value);\r\n                            break;\r\n                    }\r\n                }\r\n                //remove old error\r\n                clearMsg(elm);\r\n                if(!result_check) {\r\n                    error_code = class_name;\r\n                    validate_view(elm, result_check, error_code, error_param_msg);\r\n\r\n                    //show error in Carousel slide\r\n                    showErrorCarouselItem(service_name, elm, bot_message_type);\r\n                }\r\n            }\r\n        });\r\n        return result_check;\r\n    }\r\n\r\n    function isEmpty(v) {\r\n        return (v == '' || (v == null) || (v.length == 0) || /^\\s+$/.test(v));\r\n    }\r\n\r\n    /**\r\n     * Actions with validate input\r\n     * @param elm\r\n     * @param result_check\r\n     * @param error_code\r\n     * @param error_param_msg\r\n     */\r\n    function validate_view(elm, result_check, error_code, error_param_msg) {\r\n        if($(elm).length) {\r\n            //add message if is error or clear error class if not error\r\n            if (!result_check) {\r\n                validation_result = false;\r\n                //set error class for that elm\r\n                $(elm).addClass(error_class);\r\n                //add message\r\n                if(!isEmpty(error_code)) {\r\n                    error_code = error_code.replace(/-/g, '_');\r\n                    var msg = error_code;\r\n                    if(!isEmpty(validation_msg_list) && !isEmpty(validation_msg_list[error_code])) {\r\n                        //replace attribute message by value\r\n                        msg = setParamMessage(error_param_msg, validation_msg_list[error_code]);\r\n                    }\r\n                    var error_element = \"<label class='error'>\" + msg + \"</label>\";\r\n\r\n                    //if is select using select2\r\n                    if(isSelect2(elm)) {\r\n                        //set border for select2\r\n                        $(elm).next('.select2').find('.select2-selection').addClass(error_class);\r\n                        //set message after select2\r\n                        $(elm).next('.select2').after(error_element);\r\n                    } else {\r\n                        if($(elm).attr('type') == 'checkbox' || $(elm).attr('type') == 'radio') {\r\n                            var input_type = $(elm).attr('type');\r\n\r\n                            $(elm).parents('.' + input_type + '_box').append(error_element);\r\n                        } else {\r\n                            $(elm).after(error_element);\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                $(elm).addClass(success_class);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Clear message\r\n     * @param elm\r\n     */\r\n    function clearMsg(elm) {\r\n        $(elm).parent().find('label.error').remove();\r\n\r\n        if($(elm).attr('type') == 'checkbox' || $(elm).attr('type') == 'radio') {\r\n            var input_type = $(elm).attr('type');\r\n            $(elm).parents('.' + input_type + '_box').find('label.error').remove();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Clear error carousel slide\r\n     */\r\n    function clearCrouselError() {\r\n        $('.scenario-edit .message_bot_area .footer_message_input .carousel_indicator_item li').removeClass(error_class);\r\n    }\r\n\r\n    /**\r\n     * set value for attribute code in string\r\n     * @param param\r\n     * @param str\r\n     * @returns {*}\r\n     */\r\n    function setParamMessage(param, str) {\r\n        if(!isEmpty(param) && typeof param == 'object') {\r\n            $.each(param, function(code, value) {\r\n                if(!isEmpty(value)) {\r\n                    code = ':' + code;\r\n                    var re = new RegExp(code, \"g\");\r\n                    str = str.replace(re, value);\r\n                }\r\n            });\r\n        }\r\n        return str;\r\n    }\r\n}\r\n\r\n/**\r\n * Show error in Carousel slide\r\n */\r\nfunction showErrorCarouselItem(service_name, elm, bot_message_type) {\r\n    if(bot_content_type != null) {\r\n        var carousel_type = '';\r\n        switch (service_name) {\r\n            case 'facebook' : carousel_type = bot_content_type[type_generic]; break;\r\n            case 'line' : carousel_type = bot_content_type[type_carousel]; break;\r\n        }\r\n\r\n        if(bot_message_type == carousel_type) {\r\n            var elm_index = $(elm).parents('.generic_box.item').index(),\r\n                elm_dot   = $('.scenario-edit .message_bot_area .footer_message_input .carousel_indicator_item li').eq(elm_index);\r\n            if(!elm_dot.hasClass(error_class)) {\r\n                elm_dot.addClass(error_class);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction isSelect2(elm) {\r\n    if($(elm).hasClass('select2-hidden-accessible') && $(elm).next('.select2').length) {\r\n        return true;\r\n    }\r\n    return false;\r\n}"]}